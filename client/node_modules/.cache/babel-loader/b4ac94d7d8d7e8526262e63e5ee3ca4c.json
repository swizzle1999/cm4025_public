{"ast":null,"code":"import{getFromStorage,setInStorage}from\"./storage\";//Component to check if the browser has a token stored we can use to log them in\n//This function returns a promise so we can wait for the database fetch request and then set state with the data we get from the fetch which will in turn update the user interface\nexport function checkForLocalToken(){return new Promise(function(resolve,reject){//Get token from local storage\nvar token=getFromStorage(\"PokePacksOnline\");//If the token exists\nif(token){//Verify the token\nvar headers={\"x-auth-token\":token};fetch(\"api/auth/user/\",{method:\"GET\",headers:headers}).then(function(res){return res.json();}).then(function(json){//Check if the response contains a user, if it does, then it was a valid token\nif(json._id){//Create a JSON object which contains the token, and then another nested JSON object which contains all of the users details needed to display\nvar returnObject={\"token\":token,\"userObject\":json};resolve(returnObject);}});}//If no token was found\nelse{console.log(\"no token\");resolve(null);}});}export function checkForLocalTokenNoUserObject(){return new Promise(function(resolve,reject){//Get token from local storage\nvar token=getFromStorage(\"PokePacksOnline\");//If the token exists\nif(token){var returnObject={\"token\":token};resolve(returnObject);}//If no token was found\nelse{resolve(null);}});}","map":{"version":3,"sources":["D:/Users/swizzle1999/Documents/Programming/MERN/cm4025/client/src/utils/checkForLocalToken.js"],"names":["getFromStorage","setInStorage","checkForLocalToken","Promise","resolve","reject","token","headers","fetch","method","then","res","json","_id","returnObject","console","log","checkForLocalTokenNoUserObject"],"mappings":"AAAA,OACIA,cADJ,CAEIC,YAFJ,KAGS,WAHT,CAKA;AAEA;AACA,MAAO,SAASC,CAAAA,kBAAT,EAA6B,CAChC,MAAO,IAAIC,CAAAA,OAAJ,CAAa,SAASC,OAAT,CAAkBC,MAAlB,CAA0B,CAC9C;AACA,GAAMC,CAAAA,KAAK,CAAGN,cAAc,CAAC,iBAAD,CAA5B,CACA;AACA,GAAIM,KAAJ,CAAW,CACT;AACA,GAAIC,CAAAA,OAAO,CAAG,CACZ,eAAgBD,KADJ,CAAd,CAGAE,KAAK,CAAC,gBAAD,CAAmB,CAACC,MAAM,CAAE,KAAT,CAAgBF,OAAO,CAAEA,OAAzB,CAAnB,CAAL,CACCG,IADD,CACM,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADT,EAECF,IAFD,CAEM,SAAAE,IAAI,CAAI,CACZ;AACA,GAAIA,IAAI,CAACC,GAAT,CAAa,CACX;AACA,GAAIC,CAAAA,YAAY,CAAG,CACjB,QAASR,KADQ,CAEjB,aAAcM,IAFG,CAAnB,CAIAR,OAAO,CAACU,YAAD,CAAP,CACD,CACF,CAZD,EAcD,CACD;AApBA,IAqBK,CACDC,OAAO,CAACC,GAAR,CAAY,UAAZ,EACAZ,OAAO,CAAC,IAAD,CAAP,CACH,CACA,CA7BM,CAAP,CA+BD,CAEH,MAAO,SAASa,CAAAA,8BAAT,EAAyC,CAC5C,MAAO,IAAId,CAAAA,OAAJ,CAAa,SAASC,OAAT,CAAkBC,MAAlB,CAA0B,CAC9C;AACA,GAAMC,CAAAA,KAAK,CAAGN,cAAc,CAAC,iBAAD,CAA5B,CACA;AACA,GAAIM,KAAJ,CAAW,CAET,GAAIQ,CAAAA,YAAY,CAAG,CACjB,QAASR,KADQ,CAAnB,CAGAF,OAAO,CAACU,YAAD,CAAP,CAED,CACD;AARA,IASK,CACDV,OAAO,CAAC,IAAD,CAAP,CACH,CACA,CAhBM,CAAP,CAkBD","sourcesContent":["import {\r\n    getFromStorage,\r\n    setInStorage\r\n  } from \"./storage\"\r\n\r\n//Component to check if the browser has a token stored we can use to log them in\r\n\r\n//This function returns a promise so we can wait for the database fetch request and then set state with the data we get from the fetch which will in turn update the user interface\r\nexport function checkForLocalToken(){\r\n    return new Promise((function(resolve, reject) {\r\n    //Get token from local storage\r\n    const token = getFromStorage(\"PokePacksOnline\");\r\n    //If the token exists\r\n    if (token) {\r\n      //Verify the token\r\n      let headers = {\r\n        \"x-auth-token\": token\r\n      }\r\n      fetch(\"api/auth/user/\", {method: \"GET\", headers: headers})\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        //Check if the response contains a user, if it does, then it was a valid token\r\n        if (json._id){\r\n          //Create a JSON object which contains the token, and then another nested JSON object which contains all of the users details needed to display\r\n          let returnObject = {\r\n            \"token\": token,\r\n            \"userObject\": json\r\n          }\r\n          resolve(returnObject);\r\n        }\r\n      })\r\n\r\n    } \r\n    //If no token was found\r\n    else {\r\n        console.log(\"no token\");\r\n        resolve(null);\r\n    }\r\n    }));\r\n    \r\n  }\r\n\r\nexport function checkForLocalTokenNoUserObject(){\r\n    return new Promise((function(resolve, reject) {\r\n    //Get token from local storage\r\n    const token = getFromStorage(\"PokePacksOnline\");\r\n    //If the token exists\r\n    if (token) {\r\n\r\n      let returnObject = {\r\n        \"token\": token,\r\n      }\r\n      resolve(returnObject);\r\n\r\n    } \r\n    //If no token was found\r\n    else {\r\n        resolve(null);\r\n    }\r\n    }));\r\n    \r\n  }\r\n"]},"metadata":{},"sourceType":"module"}