{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\swizzle1999\\\\Documents\\\\Programming\\\\MERN\\\\cm4025\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from 'react-bootstrap/Form';\nimport Row from \"react-bootstrap/Row\";\nimport styled from \"styled-components\";\nimport './App.css';\nimport AddPackComponent from \"./components/AddPackComponent\";\nimport AdminComponent from \"./components/AdminComponent\";\nimport InventoryListComponent from \"./components/InventoryListComponent\";\nimport LoginComponent from './components/LoginComponent';\nimport NavbarLeftPanelComponent from './components/NavbarLeftPanelComponent';\nimport NavbarRightPanelComponent from './components/NavbarRightPanelComponent';\nimport PackListComponent from \"./components/PackListComponent\";\nimport PlayerStatsComponent from './components/PlayerStatsComponent';\nimport RegisterComponent from './components/RegisterComponent';\nimport ShopComponent from \"./components/ShopComponent\";\nimport AboutComponent from \"./components/AboutComponent\";\nimport { setInStorage } from \"./utils/storage\";\n\nconst checkForLocalToken = require(\"./utils/checkForLocalToken\");\n\nconst sortPacksByLevel = require(\"./utils/sortPacksByLevel\");\n\nconst fetch = require(\"node-fetch\");\n\nconst Styles = styled.div`\n.col-sm-4 {\n    padding-left: 0 !important;\n    height: 100vh;\n}\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); //Setting up the initial state\n\n    this.NavbarRightPanelComponentChildCallback = dataFromChild => {\n      if (dataFromChild.openPacks) {\n        this.setState({\n          rightPanelComponent: \"PackListComponent\"\n        });\n      } else if (dataFromChild.inventory) {\n        this.setState({\n          rightPanelComponent: \"InventoryListComponent\"\n        });\n      } else if (dataFromChild.addPack) {\n        this.setState({\n          rightPanelComponent: \"AddPackComponent\"\n        });\n      } else if (dataFromChild.admin) {\n        //Yes a client could modify this and get access to the admin panel\n        //But all the API calls from the admin panel are protected serverside with tokens so it dosent actually matter if they can acess it. They get no important information nor can they actually send any requests from it\n        //This is here just because it makes sense for a user not to be able to instantly click into an admin panel\n        if (this.state.admin == true) {\n          this.setState({\n            rightPanelComponent: \"AdminComponent\"\n          });\n        }\n      } else if (dataFromChild.about) {\n        this.setState({\n          rightPanelComponent: \"AboutComponent\"\n        });\n      }\n    };\n\n    this.NavbarLeftPanelComponentChildCallback = dataFromChild => {\n      if (dataFromChild.logOut) {\n        //Remove the users token from storage if they want to log out\n        setInStorage(\"PokePacksOnline\", \"\");\n        this.setState({\n          token: \"\",\n          userObject: {},\n          packListForceUpdate: this.state.packListForceUpdate + 1\n        });\n      } else if (dataFromChild.playerStats) {\n        this.setState({\n          leftPanelComponent: \"PlayerStatsComponent\"\n        });\n      } else if (dataFromChild.shop) {\n        this.setState({\n          leftPanelComponent: \"ShopComponent\"\n        });\n      }\n    };\n\n    this.leftPanelComponentChildCallback = dataFromChild => {\n      //if the child is telling the parent to load a new component\n      if (dataFromChild.componentToLoad) {\n        this.setState({\n          leftPanelComponent: dataFromChild.componentToLoad\n        });\n      } //If the child wants to log a user in\n      else if (dataFromChild.login) {\n          //Sends a request to the auth api route with the users email and password\n          fetch(\"/api/auth/\", {\n            method: \"POST\",\n            headers: {\n              \"accepts\": \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              \"email\": dataFromChild.email,\n              \"password\": dataFromChild.password\n            })\n          }).then(res => res.json()).then(json => {\n            //If the API responds with a token then we set that token in storage\n            //Yes someone could intercept this and place a fake token in, but it would do no good since they need to send a VALID token with authenticated requests\n            if (json.token) {\n              this.setState({\n                leftPanelComponentInformationMessage: \"\"\n              });\n              setInStorage(\"PokePacksOnline\", json.token);\n              this.setState({\n                leftPanelComponent: \"PlayerStatsComponent\"\n              }); //Get token from local storage and then fetch the users details from the database which is then set in state\n\n              checkForLocalToken.checkForLocalToken().then(returnObject => {\n                if (returnObject != null) {\n                  this.setState({\n                    token: returnObject.token,\n                    admin: returnObject.userObject.admin,\n                    userObject: returnObject.userObject\n                  });\n                }\n              });\n            } else {\n              this.setState({\n                leftPanelComponentInformationMessage: \"Invalid Credentials, Please Try Again\"\n              });\n              console.log(\"Invalid credentials\");\n            }\n          });\n        } //If the child wants to register a user\n        else if (dataFromChild.register) {\n            //Similar to login with a post request send to users with username and password\n            fetch(\"/api/users/\", {\n              method: \"POST\",\n              headers: {\n                \"accepts\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"username\": dataFromChild.username,\n                \"email\": dataFromChild.email,\n                \"password\": dataFromChild.password,\n                \"confirmPassword\": dataFromChild.confirmPassword\n              })\n            }).then(res => res.json()).then(json => {\n              if (json.token) {\n                this.setState({\n                  leftPanelComponent: \"LoginComponent\"\n                });\n              } else {\n                console.log(\"Invalid credentials\");\n              }\n            });\n          } //If the child wants to delete a user\n          else if (dataFromChild.delete) {\n              //Simple delete API request that deletes an account based on its token\n              fetch(\"/api/auth/user/delete\", {\n                method: \"GET\",\n                headers: {\n                  \"x-auth-token\": this.state.token\n                }\n              }).then(res => {\n                setInStorage(\"PokePacksOnline\", \"\");\n                this.setState({\n                  token: \"\",\n                  userObject: {}\n                });\n                this.setState({\n                  leftPanelComponent: \"LoginComponent\"\n                });\n              });\n            }\n    };\n\n    this.rightPanelComponentChildCallback = dataFromChild => {\n      //if the child is telling the parent to load a new component\n      if (dataFromChild.openedPack) {\n        this.setState({\n          openedPackForceShopUpdate: this.state.openedPackForceShopUpdate + 1\n        });\n      }\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        packFilter: event.target.value\n      });\n    };\n\n    this.state = {\n      time: Date.now(),\n      packs: [],\n      token: \"\",\n      admin: false,\n      userObject: {},\n      leftPanelComponent: \"PlayerStatsComponent\",\n      leftPanelComponentInformationMessage: \"\",\n      rightPanelComponent: \"PackListComponent\",\n      packFilter: \"\",\n      openedPackForceShopUpdate: 0,\n      packListForceUpdate: 0\n    };\n  }\n\n  componentDidMount() {\n    //Quick check to see if the user has an existing token\n    checkForLocalToken.checkForLocalToken().then(returnObject => {\n      if (returnObject != null) {\n        this.setState({\n          token: returnObject.token,\n          admin: returnObject.userObject.admin,\n          userObject: returnObject.userObject\n        });\n      }\n    }); //Fetch all the packs that exist in the database to be displayed\n\n    fetch(\"/api/packs\", {\n      method: \"GET\",\n      headers: {\n        \"accepts\": \"application/json\"\n      }\n    }).then(res => res.json()).then(json => {\n      let packArray = this.state.packs;\n\n      for (let i = 0; i < json.packs.length; i++) {\n        packArray.push(json.packs[i]);\n      }\n\n      packArray.sort(sortPacksByLevel.compare);\n      this.setState({\n        packs: packArray\n      });\n    });\n  } // -------------------- \"ToRender\" functions decide which component should be rendered on that side of the screen --------------------\n  //Function that is used to change what renders on the left panel\n\n\n  leftPanelComponentToRender() {\n    //Switch statement to check which component should be rendered on the left\n    switch (this.state.leftPanelComponent) {\n      case \"LoginComponent\":\n        //If a token does not exist the user is not logged in, so will just show the player stats component\n        if (this.state.token) {\n          this.setState({\n            leftPanelComponent: \"PlayerStatsComponent\"\n          });\n        } else {\n          return React.createElement(LoginComponent, {\n            informationMessage: this.state.leftPanelComponentInformationMessage,\n            callbackToParent: this.leftPanelComponentChildCallback,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          });\n        }\n\n      case \"RegisterComponent\":\n        return React.createElement(RegisterComponent, {\n          callbackToParent: this.leftPanelComponentChildCallback,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        });\n\n      case \"PlayerStatsComponent\":\n        if (this.state.token) {\n          return React.createElement(PlayerStatsComponent, {\n            token: this.state.token,\n            callbackToParent: this.leftPanelComponentChildCallback,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          });\n        } else {\n          this.setState({\n            leftPanelComponent: \"LoginComponent\"\n          });\n        }\n\n      case \"ShopComponent\":\n        if (this.state.token) {\n          return React.createElement(ShopComponent, {\n            token: this.state.token,\n            shouldForceUpdate: this.state.openedPackForceShopUpdate,\n            callbackToParent: this.leftPanelComponentChildCallback,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          });\n        } else {\n          this.setState({\n            leftPanelComponent: \"LoginComponent\"\n          });\n        }\n\n    }\n  } //Same as function above, just a switch statement to see what should be rendered on the right side of the screen\n\n\n  rightPanelComponentToRender() {\n    switch (this.state.rightPanelComponent) {\n      case \"PackListComponent\":\n        return this.renderPacks(this.state.packs);\n\n      case \"InventoryListComponent\":\n        if (this.state.token) {\n          return this.renderUserPacks(this.state.packs);\n        } else {\n          this.setState({\n            rightPanelComponent: \"PackListComponent\"\n          });\n        }\n\n      case \"AddPackComponent\":\n        return React.createElement(AddPackComponent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        });\n\n      case \"AdminComponent\":\n        return React.createElement(AdminComponent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        });\n\n      case \"AboutComponent\":\n        return React.createElement(AboutComponent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        });\n    }\n  } // ================================================================================\n  // -------------------- \"CallBack\" are used by child components to send information back to their parent (this) --------------------\n  //This is the function that the nav bar will call back to to inform the parent (this component) which component it should now render\n  //This is how child components like the navbar communicate with their parent components\n\n\n  // ================================================================================\n  //-------------------- renderPacks functions are used to map all of the packs to PackListComponents --------------------\n  //Renders all the packs to the main screen\n  renderPacks(packs) {\n    //This is a method that will appear a lot throughout this website\n    //Essentially its a loop through an array and you can then assign each element in that array to its own component, passing it in properties like name and code etc.\n    //This means each pack in this case gets its own component and then the website is able to display a list of these components\n    return packs.map(pack => React.createElement(PackListComponent, {\n      packListForceUpdate: this.state.packListForceUpdate,\n      key: pack.code,\n      code: pack.code,\n      name: pack.name,\n      cards: pack.cards,\n      cost: pack.cost,\n      level: pack.level,\n      totalCards: pack.totalCards,\n      filter: this.state.packFilter,\n      callbackToParent: this.rightPanelComponentChildCallback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }));\n  } //Renders all the packs the user owns\n\n\n  renderUserPacks(packs) {\n    return packs.map(pack => React.createElement(InventoryListComponent, {\n      key: pack.code,\n      code: pack.code,\n      name: pack.name,\n      cards: pack.cards,\n      totalCards: pack.totalCards,\n      filter: this.state.packFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }));\n  } // ================================================================================\n  //Handles the filter at the top of the screen.\n  //Whenever something in the input box changes the state is updated with the new filter\n\n\n  //Simply rendering the filter bar\n  renderFilterBar() {\n    if (this.state.rightPanelComponent == \"InventoryListComponent\" || this.state.rightPanelComponent == \"PackListComponent\") {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"cardFilter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"Filter By Card Name\"), React.createElement(Form.Control, {\n        type: \"string\",\n        placeholder: \"\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      })));\n    }\n  } //The main render method\n  //This is what is actually displaying things to the screen\n\n\n  render() {\n    const {\n      packs\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(Styles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(NavbarRightPanelComponent, {\n      rightPanelComponent: this.state.rightPanelComponent,\n      callbackToParent: this.NavbarRightPanelComponentChildCallback,\n      admin: this.state.admin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        margin: \"0 auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(NavbarLeftPanelComponent, {\n      leftPanelComponent: this.state.leftPanelComponent,\n      callbackToParent: this.NavbarLeftPanelComponentChildCallback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), this.leftPanelComponentToRender()), React.createElement(Col, {\n      style: {\n        marginTop: \"0.5rem\"\n      },\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, this.renderFilterBar(), this.rightPanelComponentToRender())))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Users/swizzle1999/Documents/Programming/MERN/cm4025/client/src/App.js"],"names":["React","Accordion","Col","Form","Row","styled","AddPackComponent","AdminComponent","InventoryListComponent","LoginComponent","NavbarLeftPanelComponent","NavbarRightPanelComponent","PackListComponent","PlayerStatsComponent","RegisterComponent","ShopComponent","AboutComponent","setInStorage","checkForLocalToken","require","sortPacksByLevel","fetch","Styles","div","App","Component","constructor","props","NavbarRightPanelComponentChildCallback","dataFromChild","openPacks","setState","rightPanelComponent","inventory","addPack","admin","state","about","NavbarLeftPanelComponentChildCallback","logOut","token","userObject","packListForceUpdate","playerStats","leftPanelComponent","shop","leftPanelComponentChildCallback","componentToLoad","login","method","headers","body","JSON","stringify","email","password","then","res","json","leftPanelComponentInformationMessage","returnObject","console","log","register","username","confirmPassword","delete","rightPanelComponentChildCallback","openedPack","openedPackForceShopUpdate","handleInputChange","event","packFilter","target","value","time","Date","now","packs","componentDidMount","packArray","i","length","push","sort","compare","leftPanelComponentToRender","rightPanelComponentToRender","renderPacks","renderUserPacks","map","pack","code","name","cards","cost","level","totalCards","renderFilterBar","color","render","margin","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from 'react-bootstrap/Form';\nimport Row from \"react-bootstrap/Row\";\nimport styled from \"styled-components\";\nimport './App.css';\nimport AddPackComponent from \"./components/AddPackComponent\";\nimport AdminComponent from \"./components/AdminComponent\";\nimport InventoryListComponent from \"./components/InventoryListComponent\";\nimport LoginComponent from './components/LoginComponent';\nimport NavbarLeftPanelComponent from './components/NavbarLeftPanelComponent';\nimport NavbarRightPanelComponent from './components/NavbarRightPanelComponent';\nimport PackListComponent from \"./components/PackListComponent\";\nimport PlayerStatsComponent from './components/PlayerStatsComponent';\nimport RegisterComponent from './components/RegisterComponent';\nimport ShopComponent from \"./components/ShopComponent\";\nimport AboutComponent from \"./components/AboutComponent\";\nimport { setInStorage } from \"./utils/storage\";\n\n\nconst checkForLocalToken = require(\"./utils/checkForLocalToken\");\nconst sortPacksByLevel = require(\"./utils/sortPacksByLevel\");\n\nconst fetch = require(\"node-fetch\");\n\nconst Styles = styled.div`\n.col-sm-4 {\n    padding-left: 0 !important;\n    height: 100vh;\n}\n`\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    //Setting up the initial state\n    this.state = {\n      time: Date.now(),\n      packs: [],\n      token: \"\",\n      admin: false,\n      userObject: {},\n      leftPanelComponent: \"PlayerStatsComponent\",\n      leftPanelComponentInformationMessage: \"\",\n      rightPanelComponent: \"PackListComponent\",\n      packFilter: \"\",\n      openedPackForceShopUpdate: 0,\n      packListForceUpdate: 0\n    }\n  }\n\n\n  componentDidMount(){\n    //Quick check to see if the user has an existing token\n    checkForLocalToken.checkForLocalToken()\n    .then(returnObject => {\n      if (returnObject != null){\n        this.setState({\n          token: returnObject.token,\n          admin: returnObject.userObject.admin,\n          userObject: returnObject.userObject,\n      })\n      }\n    })\n\n    //Fetch all the packs that exist in the database to be displayed\n    fetch(\"/api/packs\", {method: \"GET\", headers:{\"accepts\": \"application/json\"}})\n      .then(res => res.json())\n      .then(json => {\n        let packArray = this.state.packs\n        for (let i = 0; i < json.packs.length; i++){\n          packArray.push(json.packs[i]);\n        }\n        packArray.sort(sortPacksByLevel.compare)\n        this.setState({packs: packArray});\n      })\n\n      \n\n  }\n\n  // -------------------- \"ToRender\" functions decide which component should be rendered on that side of the screen --------------------\n  //Function that is used to change what renders on the left panel\n  leftPanelComponentToRender(){\n    //Switch statement to check which component should be rendered on the left\n    switch(this.state.leftPanelComponent){\n      case \"LoginComponent\":\n        //If a token does not exist the user is not logged in, so will just show the player stats component\n        if(this.state.token){\n          this.setState({\n            leftPanelComponent: \"PlayerStatsComponent\",\n          })\n        } else {\n          return <LoginComponent informationMessage={this.state.leftPanelComponentInformationMessage} callbackToParent={this.leftPanelComponentChildCallback}/>\n        }\n      case \"RegisterComponent\":\n        return <RegisterComponent callbackToParent={this.leftPanelComponentChildCallback}/>\n      case \"PlayerStatsComponent\":\n        if(this.state.token){\n          return <PlayerStatsComponent token={this.state.token} callbackToParent={this.leftPanelComponentChildCallback}/>  \n        } else {\n          this.setState({\n            leftPanelComponent: \"LoginComponent\",\n          })\n        }\n      case \"ShopComponent\":\n        if(this.state.token){\n          return <ShopComponent token={this.state.token} shouldForceUpdate={this.state.openedPackForceShopUpdate} callbackToParent={this.leftPanelComponentChildCallback}/> \n        } else {\n          this.setState({\n            leftPanelComponent: \"LoginComponent\",\n          })\n        }\n    }\n  }\n\n  //Same as function above, just a switch statement to see what should be rendered on the right side of the screen\n  rightPanelComponentToRender(){\n    switch(this.state.rightPanelComponent){\n      case \"PackListComponent\":\n        return this.renderPacks(this.state.packs)\n      case \"InventoryListComponent\":\n        if (this.state.token){\n          return this.renderUserPacks(this.state.packs);\n        } else {\n          this.setState({\n            rightPanelComponent: \"PackListComponent\",\n          })\n        }\n      case \"AddPackComponent\":\n        return <AddPackComponent />\n      case \"AdminComponent\":\n        return <AdminComponent />\n      case \"AboutComponent\":\n        return <AboutComponent />\n\n    }\n  }\n  // ================================================================================\n\n  // -------------------- \"CallBack\" are used by child components to send information back to their parent (this) --------------------\n  //This is the function that the nav bar will call back to to inform the parent (this component) which component it should now render\n  //This is how child components like the navbar communicate with their parent components\n  NavbarRightPanelComponentChildCallback = dataFromChild => {\n    if (dataFromChild.openPacks){\n      this.setState({\n        rightPanelComponent: \"PackListComponent\",\n      })\n    }else if (dataFromChild.inventory){\n      this.setState({\n        rightPanelComponent: \"InventoryListComponent\",\n      })\n    }else if (dataFromChild.addPack){\n      this.setState({\n        rightPanelComponent: \"AddPackComponent\",\n      })\n    }else if (dataFromChild.admin){\n      //Yes a client could modify this and get access to the admin panel\n      //But all the API calls from the admin panel are protected serverside with tokens so it dosent actually matter if they can acess it. They get no important information nor can they actually send any requests from it\n      //This is here just because it makes sense for a user not to be able to instantly click into an admin panel\n      if (this.state.admin == true) {\n        this.setState({\n          rightPanelComponent: \"AdminComponent\",\n        })\n      }\n    }else if (dataFromChild.about){\n      this.setState({\n        rightPanelComponent: \"AboutComponent\",\n      })\n    }\n  }\n\n  //Similar to the function above but instead for the left nav bar\n  NavbarLeftPanelComponentChildCallback = dataFromChild => {\n    if (dataFromChild.logOut){\n      //Remove the users token from storage if they want to log out\n      setInStorage(\"PokePacksOnline\", \"\");\n      this.setState({\n        token: \"\",\n        userObject: {},\n        packListForceUpdate: this.state.packListForceUpdate + 1,\n      })\n    } \n    else if (dataFromChild.playerStats){\n      this.setState({\n        leftPanelComponent: \"PlayerStatsComponent\",\n      })\n    }\n    else if (dataFromChild.shop){\n      this.setState({\n        leftPanelComponent: \"ShopComponent\",\n      })\n    }\n  }\n\n  //The callback all components that use the left panel use to communicate with the parent (this)\n  leftPanelComponentChildCallback = dataFromChild => {\n    //if the child is telling the parent to load a new component\n    if (dataFromChild.componentToLoad){\n      this.setState({\n        leftPanelComponent: dataFromChild.componentToLoad,\n      })\n    } \n    //If the child wants to log a user in\n    else if(dataFromChild.login) {\n      //Sends a request to the auth api route with the users email and password\n      fetch(\"/api/auth/\", {method: \"POST\", headers:{\"accepts\": \"application/json\", \"Content-Type\": \"application/json\"}, body: JSON.stringify({\"email\": dataFromChild.email, \"password\": dataFromChild.password})})\n      .then(res => res.json())\n      .then(json => {\n        //If the API responds with a token then we set that token in storage\n        //Yes someone could intercept this and place a fake token in, but it would do no good since they need to send a VALID token with authenticated requests\n        if (json.token){\n          this.setState({\n            leftPanelComponentInformationMessage: \"\"\n          })\n           setInStorage(\"PokePacksOnline\", json.token);\n           this.setState({\n            leftPanelComponent: \"PlayerStatsComponent\",\n            })\n          //Get token from local storage and then fetch the users details from the database which is then set in state\n          checkForLocalToken.checkForLocalToken()\n          .then(returnObject => {\n            if (returnObject != null){\n              this.setState({\n                token: returnObject.token,\n                admin: returnObject.userObject.admin,\n                userObject: returnObject.userObject,\n            })\n            }\n          })\n        } else {\n          this.setState({\n            leftPanelComponentInformationMessage: \"Invalid Credentials, Please Try Again\"\n          })\n          console.log(\"Invalid credentials\");\n        }\n      })\n    } \n    //If the child wants to register a user\n    else if (dataFromChild.register){\n      //Similar to login with a post request send to users with username and password\n      fetch(\"/api/users/\", {method: \"POST\", headers:{\"accepts\": \"application/json\", \"Content-Type\": \"application/json\"}, body: JSON.stringify({\"username\": dataFromChild.username, \"email\": dataFromChild.email, \"password\": dataFromChild.password, \"confirmPassword\": dataFromChild.confirmPassword})})\n      .then(res => res.json())\n      .then(json => {\n        if (json.token){\n           this.setState({\n             leftPanelComponent: \"LoginComponent\",\n           })\n        } else {\n          console.log(\"Invalid credentials\");\n        }\n      })\n    }\n    //If the child wants to delete a user\n    else if (dataFromChild.delete){\n      //Simple delete API request that deletes an account based on its token\n      fetch(\"/api/auth/user/delete\", {method: \"GET\", headers:{\"x-auth-token\": this.state.token}})\n      .then(res => {\n        setInStorage(\"PokePacksOnline\", \"\");\n        this.setState({\n          token: \"\",\n          userObject: {},\n        })\n        this.setState({\n          leftPanelComponent: \"LoginComponent\",\n        })\n      })\n    }\n  }\n\n  //The callback all components that use the left panel use to communicate with the parent (this)\n  rightPanelComponentChildCallback = dataFromChild => {\n    //if the child is telling the parent to load a new component\n    if (dataFromChild.openedPack){\n      this.setState({\n        openedPackForceShopUpdate: this.state.openedPackForceShopUpdate + 1\n      })\n    } \n  }\n  // ================================================================================\n\n  //-------------------- renderPacks functions are used to map all of the packs to PackListComponents --------------------\n  //Renders all the packs to the main screen\n  renderPacks(packs) {\n    //This is a method that will appear a lot throughout this website\n    //Essentially its a loop through an array and you can then assign each element in that array to its own component, passing it in properties like name and code etc.\n    //This means each pack in this case gets its own component and then the website is able to display a list of these components\n    return packs.map(pack => <PackListComponent packListForceUpdate={this.state.packListForceUpdate} key={pack.code} code={pack.code} name={pack.name} cards={pack.cards} cost={pack.cost} level={pack.level} totalCards={pack.totalCards} filter={this.state.packFilter} callbackToParent={this.rightPanelComponentChildCallback}/>)\n  }\n\n  //Renders all the packs the user owns\n  renderUserPacks(packs) {\n    return packs.map(pack => <InventoryListComponent key={pack.code} code={pack.code} name={pack.name} cards={pack.cards} totalCards={pack.totalCards} filter={this.state.packFilter}/>)\n  }\n  // ================================================================================\n\n  //Handles the filter at the top of the screen.\n  //Whenever something in the input box changes the state is updated with the new filter\n  handleInputChange = event => {\n    this.setState({packFilter: event.target.value})\n  }\n\n  //Simply rendering the filter bar\n  renderFilterBar(){\n    if (this.state.rightPanelComponent == \"InventoryListComponent\" || this.state.rightPanelComponent == \"PackListComponent\"){\n      return (\n        <Form>\n          <Form.Group controlId=\"cardFilter\">\n            <Form.Label style={{color: \"white\"}}>Filter By Card Name</Form.Label>\n            <Form.Control type=\"string\" placeholder=\"\" onChange={this.handleInputChange}/>\n          </Form.Group>\n        </Form>\n      );\n    }\n  }\n\n  //The main render method\n  //This is what is actually displaying things to the screen\n  render() {\n    const {packs} = this.state;\n    return (\n      <div className=\"App\">\n        <Styles>\n          <NavbarRightPanelComponent rightPanelComponent={this.state.rightPanelComponent} callbackToParent={this.NavbarRightPanelComponentChildCallback} admin={this.state.admin}/>\n          <Row style={{margin: \"0 auto\"}}>\n            <Col>\n              <NavbarLeftPanelComponent leftPanelComponent={this.state.leftPanelComponent} callbackToParent={this.NavbarLeftPanelComponentChildCallback}/>\n              {this.leftPanelComponentToRender()}\n            </Col>\n            <Col style={{marginTop: \"0.5rem\"}} sm={8}>\n              <Accordion>\n                {this.renderFilterBar()}\n                {this.rightPanelComponentToRender()}\n              </Accordion>\n            </Col>\n          </Row>\n        </Styles>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}