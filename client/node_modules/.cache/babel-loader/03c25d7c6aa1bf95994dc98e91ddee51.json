{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\swizzle1999\\\\Documents\\\\Programming\\\\MERN\\\\cm4025\\\\client\\\\src\\\\components\\\\InventoryListComponent.js\";\nimport React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavbarBrand from \"react-bootstrap/NavbarBrand\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Card from \"react-bootstrap/Card\";\nimport AccordionToggle from 'react-bootstrap/AccordionToggle';\nimport Table from 'react-bootstrap/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faBoxOpen } from '@fortawesome/free-solid-svg-icons';\nimport { faCoins } from '@fortawesome/free-solid-svg-icons';\nimport styled from \"styled-components\";\nimport logo from \"../images/pokepacksonline.png\";\nimport InventoryListCardComponent from \"./InventoryListCardComponent\";\n\nconst fetch = require(\"node-fetch\");\n\nconst checkForLocalToken = require(\"../utils/checkForLocalToken\");\n\nconst Styles = styled.div`\n\n`;\nconst Img = styled.img`\n    height: auto;\n    width: 30%;\n`;\nexport default class InventoryListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCards = () => {\n      this.setState({\n        cardsComponent: null\n      }); //Initial empty inventory\n\n      let inventory = null; //Check the user is valid and grab token\n\n      checkForLocalToken.checkForLocalTokenNoUserObject().then(returnObject => {\n        if (returnObject != null) {\n          this.setState({\n            token: returnObject.token\n          });\n        }\n      }) //Send token along to verify the user is who they say they are and in order to grab their inventory\n      .then(async () => {\n        await fetch(\"/api/auth/user/inventory\", {\n          method: \"GET\",\n          headers: {\n            \"accepts\": \"application/json\",\n            \"x-auth-token\": this.state.token\n          }\n        }).then(res => res.json()).then(async json => {\n          //Go over the users inventory and find the correct pack\n          for (let i = 0; i < json.inventory.length; i++) {\n            if (json.inventory[i].code == this.props.code) {\n              //Set the correct pack to the current inventory\n              inventory = json.inventory[i].cards;\n            }\n          } //Remove any cards that do not match the filter from the json\n\n\n          for (let i = 0; i < inventory.length; i++) {\n            if (!JSON.stringify(inventory[i].name).includes(this.props.filter)) {\n              inventory.splice(i, 1);\n              i--;\n            }\n          }\n        });\n      }).then(() => {\n        //If the inventory still equals null then we own no cards from this set\n        if (inventory == null) {\n          console.log(inventory.length);\n          this.setState({\n            informationMessage: \"You Own No Cards From This Set\"\n          });\n        } else {\n          console.log(\"ran this\"); //If the inventory does contain elements, map them to card components to display them\n\n          this.setState({\n            cardsComponent: inventory.map(card => React.createElement(InventoryListCardComponent, {\n              key: card.id,\n              code: card.id,\n              name: card.name,\n              quantity: card.quantity,\n              rarity: card.rarity,\n              packCode: this.props.code,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            }))\n          });\n          this.setState({\n            informationMessage: null\n          });\n        }\n      });\n    };\n\n    this.state = {\n      inventory: null,\n      cardsComponent: null,\n      informationMessage: \"Loading...\",\n      displayCard: false\n    };\n  }\n\n  componentDidMount() {} //When component updates it checks to see if the search filter has changed\n  //If it has it knows it must re render the cards\n  //\"prevState.cardsComponent != null\" works because even though if we type something in that gets no result. its not null, its an empty array\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.filter != this.props.filter && prevState.cardsComponent != null) {\n      this.setState({\n        informationMessage: \"Loading...\"\n      });\n      this.renderCards();\n    }\n  } //Function that is called when the props of this component change, performs a state change to update the filter\n  //Cards component is set to null to get rid of all existing cards from the list\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    console.log(\"shite\");\n\n    if (nextProps.filter != prevState.filter) {\n      return {\n        filter: nextProps.filter\n      };\n    }\n  }\n\n  childCallback(dataFromChild) {}\n\n  render() {\n    const Styles = styled.div`\n            .nav-link{\n                color: #FFFFFF !important;\n            }\n\n            .navbar{\n                background-color: #272727 !important;\n            }\n        `;\n    const Logo = styled.img`\n            height: auto;\n            width: 15%;\n        `; //<Logo className=\"float-left\" src={logo}>\n    //<NavbarBrand style={{color: \"#FFFFFF\", fontSize: \"2rem\",}}></NavbarBrand>\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(AccordionToggle, {\n      as: Button,\n      onClick: this.renderCards,\n      variant: \"link\",\n      eventKey: this.props.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.props.name, React.createElement(Logo, {\n      style: {\n        marginLeft: \"0.5rem\",\n        marginRight: \"0.5rem\"\n      },\n      src: \"https://cm4025.s3.amazonaws.com/packs/\" + this.props.code + \"/\" + this.props.code + \"Logo.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))), React.createElement(Accordion.Collapse, {\n      eventKey: this.props.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Card Code\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Rarity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Image\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.cardsComponent)), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.state.informationMessage)))));\n  }\n\n}","map":{"version":3,"sources":["D:/Users/swizzle1999/Documents/Programming/MERN/cm4025/client/src/components/InventoryListComponent.js"],"names":["React","Button","Navbar","Nav","NavbarBrand","Accordion","Modal","Card","AccordionToggle","Table","FontAwesomeIcon","faSignOutAlt","faBoxOpen","faCoins","styled","logo","InventoryListCardComponent","fetch","require","checkForLocalToken","Styles","div","Img","img","InventoryListComponent","Component","constructor","props","renderCards","setState","cardsComponent","inventory","checkForLocalTokenNoUserObject","then","returnObject","token","method","headers","state","res","json","i","length","code","cards","JSON","stringify","name","includes","filter","splice","console","log","informationMessage","map","card","id","quantity","rarity","displayCard","componentDidMount","componentDidUpdate","prevProps","prevState","getDerivedStateFromProps","nextProps","childCallback","dataFromChild","render","Logo","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavbarBrand from \"react-bootstrap/NavbarBrand\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport AccordionToggle from 'react-bootstrap/AccordionToggle';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faBoxOpen } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCoins } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport logo from \"../images/pokepacksonline.png\"\r\n\r\nimport InventoryListCardComponent from \"./InventoryListCardComponent\";\r\n\r\nconst fetch = require(\"node-fetch\");\r\nconst checkForLocalToken = require(\"../utils/checkForLocalToken\");\r\n\r\nconst Styles = styled.div`\r\n\r\n`\r\n\r\nconst Img = styled.img`\r\n    height: auto;\r\n    width: 30%;\r\n`\r\n\r\nexport default class InventoryListComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            inventory: null,\r\n            cardsComponent: null,\r\n            informationMessage: \"Loading...\",\r\n            displayCard: false,\r\n          }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    //When component updates it checks to see if the search filter has changed\r\n    //If it has it knows it must re render the cards\r\n    //\"prevState.cardsComponent != null\" works because even though if we type something in that gets no result. its not null, its an empty array\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.filter != this.props.filter && prevState.cardsComponent != null){\r\n            this.setState({informationMessage: \"Loading...\"})\r\n            this.renderCards()\r\n        }\r\n    }\r\n\r\n    //Function that is called when the props of this component change, performs a state change to update the filter\r\n    //Cards component is set to null to get rid of all existing cards from the list\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        console.log(\"shite\");\r\n        if (nextProps.filter != prevState.filter){\r\n            return ({filter: nextProps.filter})\r\n        }\r\n    }\r\n\r\n    renderCards = () => {\r\n\r\n        this.setState({\r\n            cardsComponent: null,\r\n        })\r\n        //Initial empty inventory\r\n        let inventory = null\r\n\r\n        //Check the user is valid and grab token\r\n        checkForLocalToken.checkForLocalTokenNoUserObject()\r\n        .then(returnObject => {\r\n          if (returnObject != null){\r\n            this.setState({\r\n              token: returnObject.token,\r\n          })\r\n          }\r\n        })\r\n        //Send token along to verify the user is who they say they are and in order to grab their inventory\r\n        .then(async () => {\r\n            await fetch(\"/api/auth/user/inventory\", {method: \"GET\", headers:{\"accepts\": \"application/json\", \"x-auth-token\": this.state.token}})\r\n            .then(res => res.json())\r\n            .then(async json => {\r\n                //Go over the users inventory and find the correct pack\r\n                for (let i = 0; i < json.inventory.length; i++){\r\n                    if (json.inventory[i].code == this.props.code){\r\n                        //Set the correct pack to the current inventory\r\n                        inventory = json.inventory[i].cards;\r\n                    }\r\n                }\r\n\r\n                //Remove any cards that do not match the filter from the json\r\n                for (let i = 0; i < inventory.length; i++){\r\n                    if (!JSON.stringify(inventory[i].name).includes(this.props.filter)){\r\n                        inventory.splice(i, 1)\r\n                        i--\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        .then(() => {\r\n            //If the inventory still equals null then we own no cards from this set\r\n            if (inventory == null){\r\n                console.log(inventory.length)\r\n                this.setState({informationMessage: \"You Own No Cards From This Set\"})\r\n            } else {\r\n                console.log(\"ran this\");\r\n                //If the inventory does contain elements, map them to card components to display them\r\n                this.setState({cardsComponent: inventory.map(card => <InventoryListCardComponent key={card.id} code={card.id} name={card.name} quantity={card.quantity} rarity={card.rarity} packCode={this.props.code}/>)})\r\n                this.setState({informationMessage: null})\r\n            }\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    childCallback(dataFromChild){\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const Styles = styled.div`\r\n            .nav-link{\r\n                color: #FFFFFF !important;\r\n            }\r\n\r\n            .navbar{\r\n                background-color: #272727 !important;\r\n            }\r\n        `\r\n\r\n        const Logo = styled.img`\r\n            height: auto;\r\n            width: 15%;\r\n        `\r\n        \r\n\r\n        //<Logo className=\"float-left\" src={logo}>\r\n        //<NavbarBrand style={{color: \"#FFFFFF\", fontSize: \"2rem\",}}></NavbarBrand>\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <AccordionToggle as={Button} onClick={this.renderCards} variant=\"link\" eventKey={this.props.code}>\r\n                            {this.props.name}  \r\n                            <Logo style={{marginLeft: \"0.5rem\", marginRight: \"0.5rem\"}}src={\"https://cm4025.s3.amazonaws.com/packs/\" + this.props.code + \"/\" + this.props.code + \"Logo.jpg\"}/>\r\n                        </AccordionToggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={this.props.code}>\r\n                        <Card.Body>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Card Code</th>\r\n                                        <th>Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Rarity</th>\r\n                                        <th>Image</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.cardsComponent} \r\n                                </tbody>\r\n                            </Table>\r\n                            <h1>{this.state.informationMessage}</h1>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}