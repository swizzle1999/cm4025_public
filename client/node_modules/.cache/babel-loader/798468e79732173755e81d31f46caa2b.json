{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\swizzle1999\\\\Documents\\\\Programming\\\\MERN\\\\cm4025\\\\client\\\\src\\\\components\\\\ShopItemListComponent.js\";\nimport React from 'react';\nimport Accordion from \"react-bootstrap/Accordion\";\nimport AccordionToggle from 'react-bootstrap/AccordionToggle';\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from 'react-bootstrap/Table';\nimport styled from \"styled-components\";\n\nconst fetch = require(\"node-fetch\");\n\nconst checkForLocalToken = require(\"../utils/checkForLocalToken\");\n\nexport default class ShopItemListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.purchaseItem = () => {\n      fetch(this.props.apiCallBuy, {\n        method: \"GET\",\n        headers: {\n          \"accepts\": \"application/json\",\n          \"x-auth-token\": this.state.token\n        }\n      }).then(res => res.json()).then(json => {\n        this.setState({\n          informationMessage: json.msg\n        });\n      });\n    };\n\n    this.renderItem = () => {\n      checkForLocalToken.checkForLocalTokenNoUserObject().then(returnObject => {\n        if (returnObject != null) {\n          this.setState({\n            token: returnObject.token\n          });\n        }\n      }) //Send token along to verify the user is who they say they are and in order to grab their inventory\n      .then(() => {\n        if (this.state.token == null) {\n          this.setState({\n            informationMessage: \"Please Login To Perform This Action\"\n          });\n        }\n\n        fetch(this.props.apiCallRequirments, {\n          method: \"GET\",\n          headers: {\n            \"accepts\": \"application/json\",\n            \"x-auth-token\": this.state.token\n          }\n        }).then(res => res.json()).then(json => {\n          let requirments = null;\n          let cost = 0;\n\n          if (this.props.itemName == \"Level Up\") {\n            requirments = json.map(element => React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }, React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }, element[0] + \":\"), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }), \"Have: \" + element[1] + \"/\" + element[2], React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }), \" Need: \" + element[3] + \"/\" + element[2]));\n          } else if (this.props.itemName == \"Increase Money Gain Rate\") {\n            cost = json.nextLevelCost;\n\n            if (json.msg) {\n              this.setState({\n                informationMessage: json.msg\n              });\n              return;\n            }\n\n            requirments = React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }, React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }, \"Current Level: \" + json.currentLevel + \"/\" + json.maxLevel, React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }), \"Next Level Cost: \" + json.nextLevelCost, React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }), \"Next Level Effect: +\" + json.nextLevelEffect));\n          } else if (this.props.itemName == \"Increase Wallet Size\") {\n            cost = json.nextLevelCost;\n\n            if (json.msg) {\n              requirments = React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 70\n                },\n                __self: this\n              }, React.createElement(\"b\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 70\n                },\n                __self: this\n              }, \"Current Level: \" + json.currentLevel + \"/\" + json.maxLevel, React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 70\n                },\n                __self: this\n              })));\n              this.setState({\n                informationMessage: json.msg\n              });\n              return;\n            }\n\n            requirments = React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, \"Current Level: \" + json.currentLevel + \"/\" + json.maxLevel, React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }), \"Next Level Cost: \" + json.nextLevelCost, React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }), \"Next Level Effect: +\" + json.nextLevelEffect));\n          } else {\n            requirments = \"Check ShopItemListComponent. You made a goof\";\n          }\n\n          this.setState({\n            itemsComponents: React.createElement(\"tr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }, this.props.itemName), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }, requirments), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }, React.createElement(Button, {\n              variant: \"success\",\n              onClick: this.purchaseItem,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }, \"$\", cost)))\n          });\n        });\n      });\n    };\n\n    this.state = {\n      token: null,\n      itemsComponents: null,\n      informationMessage: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(AccordionToggle, {\n      as: Button,\n      onClick: this.renderItem,\n      variant: \"link\",\n      eventKey: this.props.itemName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.itemName)), React.createElement(Accordion.Collapse, {\n      eventKey: this.props.itemName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Item Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Cost\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.itemsComponents)), this.state.informationMessage))));\n  }\n\n}","map":{"version":3,"sources":["D:/Users/swizzle1999/Documents/Programming/MERN/cm4025/client/src/components/ShopItemListComponent.js"],"names":["React","Accordion","AccordionToggle","Button","Card","Table","styled","fetch","require","checkForLocalToken","ShopItemListComponent","Component","constructor","props","purchaseItem","apiCallBuy","method","headers","state","token","then","res","json","setState","informationMessage","msg","renderItem","checkForLocalTokenNoUserObject","returnObject","apiCallRequirments","requirments","cost","itemName","map","element","nextLevelCost","currentLevel","maxLevel","nextLevelEffect","itemsComponents","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AACA,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,6BAAD,CAAlC;;AAEA,eAAe,MAAME,qBAAN,SAAoCV,KAAK,CAACW,SAA1C,CAAmD;AAC9DC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAclBC,YAdkB,GAcH,MAAM;AACjBP,MAAAA,KAAK,CAAC,KAAKM,KAAL,CAAWE,UAAZ,EAAwB;AAACC,QAAAA,MAAM,EAAE,KAAT;AAAgBC,QAAAA,OAAO,EAAC;AAAC,qBAAW,kBAAZ;AAAgC,0BAAgB,KAAKC,KAAL,CAAWC;AAA3D;AAAxB,OAAxB,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,aAAKC,QAAL,CAAc;AAACC,UAAAA,kBAAkB,EAAEF,IAAI,CAACG;AAA1B,SAAd;AACH,OAJD;AAKH,KApBiB;;AAAA,SAsBlBC,UAtBkB,GAsBL,MAAM;AACfjB,MAAAA,kBAAkB,CAACkB,8BAAnB,GACCP,IADD,CACMQ,YAAY,IAAI;AACpB,YAAIA,YAAY,IAAI,IAApB,EAAyB;AACvB,eAAKL,QAAL,CAAc;AACZJ,YAAAA,KAAK,EAAES,YAAY,CAACT;AADR,WAAd;AAGD;AACF,OAPD,EAQA;AARA,OASCC,IATD,CASM,MAAM;AACR,YAAI,KAAKF,KAAL,CAAWC,KAAX,IAAoB,IAAxB,EAA6B;AACzB,eAAKI,QAAL,CAAc;AAACC,YAAAA,kBAAkB,EAAE;AAArB,WAAd;AACH;;AAEDjB,QAAAA,KAAK,CAAC,KAAKM,KAAL,CAAWgB,kBAAZ,EAAgC;AAACb,UAAAA,MAAM,EAAE,KAAT;AAAgBC,UAAAA,OAAO,EAAC;AAAC,uBAAW,kBAAZ;AAAgC,4BAAgB,KAAKC,KAAL,CAAWC;AAA3D;AAAxB,SAAhC,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AAEV,cAAIQ,WAAW,GAAG,IAAlB;AACA,cAAIC,IAAI,GAAG,CAAX;;AACA,cAAI,KAAKlB,KAAL,CAAWmB,QAAX,IAAuB,UAA3B,EAAsC;AAClCF,YAAAA,WAAW,GAAGR,IAAI,CAACW,GAAL,CAASC,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAIA,OAAO,CAAC,CAAD,CAAP,GAAa,GAAjB,CAAH,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA5B,EAAkC,WAAWA,OAAO,CAAC,CAAD,CAAlB,GAAwB,GAAxB,GAA8BA,OAAO,CAAC,CAAD,CAAvE,EAA2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3E,EAAiF,YAAYA,OAAO,CAAC,CAAD,CAAnB,GAAyB,GAAzB,GAA+BA,OAAO,CAAC,CAAD,CAAvH,CAApB,CAAd;AACH,WAFD,MAGK,IAAI,KAAKrB,KAAL,CAAWmB,QAAX,IAAuB,0BAA3B,EAAsD;AACvDD,YAAAA,IAAI,GAAGT,IAAI,CAACa,aAAZ;;AACA,gBAAIb,IAAI,CAACG,GAAT,EAAa;AACT,mBAAKF,QAAL,CAAc;AAACC,gBAAAA,kBAAkB,EAAEF,IAAI,CAACG;AAA1B,eAAd;AACA;AACH;;AACDK,YAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAI,oBAAoBR,IAAI,CAACc,YAAzB,GAAwC,GAAxC,GAA8Cd,IAAI,CAACe,QAAvD,EAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhE,EAAsE,sBAAsBf,IAAI,CAACa,aAAjG,EAA+G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA/G,EAAqH,yBAAyBb,IAAI,CAACgB,eAAnJ,CAAH,CAAd;AACH,WAPI,MAQA,IAAI,KAAKzB,KAAL,CAAWmB,QAAX,IAAuB,sBAA3B,EAAkD;AACnDD,YAAAA,IAAI,GAAGT,IAAI,CAACa,aAAZ;;AACA,gBAAIb,IAAI,CAACG,GAAT,EAAa;AACTK,cAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAI,oBAAoBR,IAAI,CAACc,YAAzB,GAAwC,GAAxC,GAA8Cd,IAAI,CAACe,QAAvD,EAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhE,CAAH,CAAd;AACA,mBAAKd,QAAL,CAAc;AAACC,gBAAAA,kBAAkB,EAAEF,IAAI,CAACG;AAA1B,eAAd;AACA;AACH;;AACDK,YAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAI,oBAAoBR,IAAI,CAACc,YAAzB,GAAwC,GAAxC,GAA8Cd,IAAI,CAACe,QAAvD,EAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhE,EAAsE,sBAAsBf,IAAI,CAACa,aAAjG,EAA+G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA/G,EAAqH,yBAAyBb,IAAI,CAACgB,eAAnJ,CAAH,CAAd;AACH,WARI,MASA;AACDR,YAAAA,WAAW,GAAG,8CAAd;AACH;;AAED,eAAKP,QAAL,CAAc;AACVgB,YAAAA,eAAe,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAK,KAAK1B,KAAL,CAAWmB,QAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKF,WAAL,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAI,oBAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,OAAO,EAAE,KAAKhB,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwDiB,IAAxD,CAAJ,CAHJ;AAFM,WAAd;AAQH,SAtCD;AAuCH,OArDD;AAuDH,KA9EiB;;AAGd,SAAKb,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAEToB,MAAAA,eAAe,EAAE,IAFR;AAGTf,MAAAA,kBAAkB,EAAE;AAHX,KAAb;AAKH;;AAEDgB,EAAAA,iBAAiB,GAAE,CAElB;;AAoEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,EAAE,EAAEtC,MAArB;AAA6B,MAAA,OAAO,EAAE,KAAKuB,UAA3C;AAAuD,MAAA,OAAO,EAAC,MAA/D;AAAsE,MAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWmB,QAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnB,KAAL,CAAWmB,QADhB,CADJ,CADJ,EAMI,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWmB,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKd,KAAL,CAAWqB,eADhB,CARJ,CADJ,EAaK,KAAKrB,KAAL,CAAWM,kBAbhB,CADJ,CANJ,CADJ,CADJ;AA4BH;;AA9G6D","sourcesContent":["import React from 'react';\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport AccordionToggle from 'react-bootstrap/AccordionToggle';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport styled from \"styled-components\";\r\n\r\nconst fetch = require(\"node-fetch\");\r\nconst checkForLocalToken = require(\"../utils/checkForLocalToken\");\r\n\r\nexport default class ShopItemListComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            token: null,\r\n            itemsComponents: null,\r\n            informationMessage: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    purchaseItem = () => {\r\n        fetch(this.props.apiCallBuy, {method: \"GET\", headers:{\"accepts\": \"application/json\", \"x-auth-token\": this.state.token}})\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({informationMessage: json.msg})\r\n        });\r\n    }\r\n\r\n    renderItem = () => {\r\n        checkForLocalToken.checkForLocalTokenNoUserObject()\r\n        .then(returnObject => {\r\n          if (returnObject != null){\r\n            this.setState({\r\n              token: returnObject.token,\r\n            })\r\n          }\r\n        })\r\n        //Send token along to verify the user is who they say they are and in order to grab their inventory\r\n        .then(() => {\r\n            if (this.state.token == null){\r\n                this.setState({informationMessage: \"Please Login To Perform This Action\"})\r\n            }\r\n\r\n            fetch(this.props.apiCallRequirments, {method: \"GET\", headers:{\"accepts\": \"application/json\", \"x-auth-token\": this.state.token}})\r\n            .then(res => res.json())\r\n            .then(json => {\r\n\r\n                let requirments = null;\r\n                let cost = 0;\r\n                if (this.props.itemName == \"Level Up\"){\r\n                    requirments = json.map(element => <p><b>{element[0] + \":\"}</b><br/>{\"Have: \" + element[1] + \"/\" + element[2]}<br/>{\" Need: \" + element[3] + \"/\" + element[2]}</p>)\r\n                } \r\n                else if (this.props.itemName == \"Increase Money Gain Rate\"){\r\n                    cost = json.nextLevelCost;\r\n                    if (json.msg){\r\n                        this.setState({informationMessage: json.msg})\r\n                        return\r\n                    }\r\n                    requirments = <p><b>{\"Current Level: \" + json.currentLevel + \"/\" + json.maxLevel}<br/>{\"Next Level Cost: \" + json.nextLevelCost}<br/>{\"Next Level Effect: +\" + json.nextLevelEffect}</b></p>\r\n                }\r\n                else if (this.props.itemName == \"Increase Wallet Size\"){\r\n                    cost = json.nextLevelCost;\r\n                    if (json.msg){\r\n                        requirments = <p><b>{\"Current Level: \" + json.currentLevel + \"/\" + json.maxLevel}<br/></b></p>\r\n                        this.setState({informationMessage: json.msg})\r\n                        return\r\n                    }\r\n                    requirments = <p><b>{\"Current Level: \" + json.currentLevel + \"/\" + json.maxLevel}<br/>{\"Next Level Cost: \" + json.nextLevelCost}<br/>{\"Next Level Effect: +\" + json.nextLevelEffect}</b></p>\r\n                }\r\n                else {\r\n                    requirments = \"Check ShopItemListComponent. You made a goof\"\r\n                }\r\n\r\n                this.setState({\r\n                    itemsComponents: \r\n                        <tr>\r\n                            <td>{this.props.itemName}</td>\r\n                            <td>{requirments}</td>\r\n                            <td><Button variant=\"success\" onClick={this.purchaseItem}>${cost}</Button></td>\r\n                        </tr>\r\n                })\r\n            })\r\n        });\r\n            \r\n    }\r\n\r\n    render() {   \r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <AccordionToggle as={Button} onClick={this.renderItem} variant=\"link\" eventKey={this.props.itemName}>\r\n                            {this.props.itemName}\r\n                        </AccordionToggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={this.props.itemName}>\r\n                        <Card.Body>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Item Name</th>\r\n                                        <th>Description</th>\r\n                                        <th>Cost</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.itemsComponents}\r\n                                </tbody>\r\n                            </Table>\r\n                            {this.state.informationMessage}\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}