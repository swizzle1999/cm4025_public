{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\swizzle1999\\\\Documents\\\\Programming\\\\MERN\\\\cm4025\\\\client\\\\src\\\\components\\\\ShopItemListComponent.js\";\nimport React from 'react';\nimport Accordion from \"react-bootstrap/Accordion\";\nimport AccordionToggle from 'react-bootstrap/AccordionToggle';\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from 'react-bootstrap/Table';\nimport styled from \"styled-components\";\n\nconst fetch = require(\"node-fetch\");\n\nconst checkForLocalToken = require(\"../utils/checkForLocalToken\"); // A somewhat complicated component that is recieved paramaters from parents and depending on those paramaters this component will perform diffrent actions\n//For example if this.props.itemName == \"Level Up\" then this component is used to buy a level up\n\n\nexport default class ShopItemListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.purchaseItem = () => {\n      fetch(this.props.apiCallBuy, {\n        method: \"GET\",\n        headers: {\n          \"accepts\": \"application/json\",\n          \"x-auth-token\": this.state.token\n        }\n      }).then(res => res.json()).then(json => {\n        this.setState({\n          informationMessage: json.msg\n        });\n      });\n    };\n\n    this.renderItem = () => {\n      //First ensures the user has a valid token\n      checkForLocalToken.checkForLocalTokenNoUserObject().then(returnObject => {\n        if (returnObject != null) {\n          this.setState({\n            token: returnObject.token\n          });\n        }\n      }) //Send token along to verify the user is who they say they are and in order to grab their inventory\n      .then(() => {\n        if (this.state.token == null) {\n          this.setState({\n            informationMessage: \"Please Login To Perform This Action\"\n          });\n        }\n\n        this.requirmentsCall();\n      });\n    };\n\n    this.requirmentsCall = () => {\n      //API call to determine the requirments needed to purchase this item\n      fetch(this.props.apiCallRequirments, {\n        method: \"GET\",\n        headers: {\n          \"accepts\": \"application/json\",\n          \"x-auth-token\": this.state.token\n        }\n      }).then(res => res.json()).then(json => {\n        let requirments = null;\n        let cost = 0; //The requirments are then mapped onto a HTML element that can be displayed to the user\n        //Diffrent logic is applied when the shop item is a level up since a level up requires the user to open a certain ammount of cards in order to actually level up\n\n        if (this.props.itemName == \"Level Up\") {\n          requirments = json.map(element => React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, element[0] + \":\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }), \"Have: \" + element[1] + \"/\" + element[2], React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }), \" Need: \" + element[3] + \"/\" + element[2]));\n        } //Anything that is not a simple level up just requires a certain ammount of money to purchase\n        else if (this.props.itemName != \"Level Up\") {\n            cost = json.nextLevelCost;\n\n            if (json.msg) {\n              requirments = React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 85\n                },\n                __self: this\n              }, React.createElement(\"b\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 85\n                },\n                __self: this\n              }, \"Current Level: \" + json.currentLevel + \"/\" + json.maxLevel, React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 85\n                },\n                __self: this\n              })));\n              this.setState({\n                informationMessage: json.msg\n              });\n            } else {\n              requirments = React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 88\n                },\n                __self: this\n              }, React.createElement(\"b\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 88\n                },\n                __self: this\n              }, \"Current Level: \" + json.currentLevel + \"/\" + json.maxLevel, React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 88\n                },\n                __self: this\n              }), \"Next Level Cost: \" + json.nextLevelCost, React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 88\n                },\n                __self: this\n              }), \"Next Level Effect: +\" + json.nextLevelEffect));\n              this.setState({\n                informationMessage: \"\"\n              });\n            }\n          } //Simple error message to show if something is wrong like the this.props.itemName\n          else {\n              requirments = \"Check ShopItemListComponent. You made a goof\";\n            } //Set state of the item name, the items requirments and then a cost button to actually purchase the item. This state is in HTML so it can be displayed in the render function \n\n\n        this.setState({\n          itemsComponents: React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, this.props.itemName), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, requirments), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, React.createElement(Button, {\n            variant: \"success\",\n            onClick: this.purchaseItem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, \"$\", cost)))\n        });\n      });\n    };\n\n    this.state = {\n      token: null,\n      itemsComponents: null,\n      informationMessage: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps) {\n    if (this.props.shouldForceUpdate != prevProps.shouldForceUpdate) {\n      console.log(\"flip flop\");\n      this.requirmentsCall();\n    }\n  } //Function to actually call the API to make a purchace\n  //Uses the props passed by the parent to decide what API route to call\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(AccordionToggle, {\n      as: Button,\n      onClick: this.renderItem,\n      variant: \"link\",\n      eventKey: this.props.itemName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.props.itemName)), React.createElement(Accordion.Collapse, {\n      eventKey: this.props.itemName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Item Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Cost\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.itemsComponents)), this.state.informationMessage))));\n  }\n\n}","map":{"version":3,"sources":["D:/Users/swizzle1999/Documents/Programming/MERN/cm4025/client/src/components/ShopItemListComponent.js"],"names":["React","Accordion","AccordionToggle","Button","Card","Table","styled","fetch","require","checkForLocalToken","ShopItemListComponent","Component","constructor","props","purchaseItem","apiCallBuy","method","headers","state","token","then","res","json","setState","informationMessage","msg","renderItem","checkForLocalTokenNoUserObject","returnObject","requirmentsCall","apiCallRequirments","requirments","cost","itemName","map","element","nextLevelCost","currentLevel","maxLevel","nextLevelEffect","itemsComponents","componentDidMount","componentDidUpdate","prevProps","shouldForceUpdate","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport AccordionToggle from 'react-bootstrap/AccordionToggle';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport styled from \"styled-components\";\r\n\r\nconst fetch = require(\"node-fetch\");\r\nconst checkForLocalToken = require(\"../utils/checkForLocalToken\");\r\n\r\n// A somewhat complicated component that is recieved paramaters from parents and depending on those paramaters this component will perform diffrent actions\r\n//For example if this.props.itemName == \"Level Up\" then this component is used to buy a level up\r\nexport default class ShopItemListComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            token: null,\r\n            itemsComponents: null,\r\n            informationMessage: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.shouldForceUpdate != prevProps.shouldForceUpdate){\r\n            console.log(\"flip flop\")\r\n            this.requirmentsCall()\r\n        }\r\n    }\r\n\r\n    //Function to actually call the API to make a purchace\r\n    //Uses the props passed by the parent to decide what API route to call\r\n    purchaseItem = () => {\r\n        fetch(this.props.apiCallBuy, {method: \"GET\", headers:{\"accepts\": \"application/json\", \"x-auth-token\": this.state.token}})\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({informationMessage: json.msg})\r\n        });\r\n    }\r\n\r\n    //Function renders the individual shop item\r\n    renderItem = () => {\r\n        //First ensures the user has a valid token\r\n        checkForLocalToken.checkForLocalTokenNoUserObject()\r\n        .then(returnObject => {\r\n          if (returnObject != null){\r\n            this.setState({\r\n              token: returnObject.token,\r\n            })\r\n          }\r\n        })\r\n        //Send token along to verify the user is who they say they are and in order to grab their inventory\r\n        .then(() => {\r\n            if (this.state.token == null){\r\n                this.setState({informationMessage: \"Please Login To Perform This Action\"})\r\n            }\r\n\r\n            this.requirmentsCall();\r\n        });\r\n            \r\n    }\r\n\r\n    requirmentsCall = () => {\r\n        //API call to determine the requirments needed to purchase this item\r\n            fetch(this.props.apiCallRequirments, {method: \"GET\", headers:{\"accepts\": \"application/json\", \"x-auth-token\": this.state.token}})\r\n            .then(res => res.json())\r\n            .then(json => {\r\n\r\n                let requirments = null;\r\n                let cost = 0;\r\n                //The requirments are then mapped onto a HTML element that can be displayed to the user\r\n                //Diffrent logic is applied when the shop item is a level up since a level up requires the user to open a certain ammount of cards in order to actually level up\r\n                if (this.props.itemName == \"Level Up\"){\r\n                    requirments = json.map(element => <p><b>{element[0] + \":\"}</b><br/>{\"Have: \" + element[1] + \"/\" + element[2]}<br/>{\" Need: \" + element[3] + \"/\" + element[2]}</p>)\r\n                } \r\n                //Anything that is not a simple level up just requires a certain ammount of money to purchase\r\n                else if (this.props.itemName != \"Level Up\"){\r\n                    cost = json.nextLevelCost;\r\n                    if (json.msg){\r\n                        requirments = <p><b>{\"Current Level: \" + json.currentLevel + \"/\" + json.maxLevel}<br/></b></p>\r\n                        this.setState({informationMessage: json.msg})\r\n                    } else {\r\n                        requirments = <p><b>{\"Current Level: \" + json.currentLevel + \"/\" + json.maxLevel}<br/>{\"Next Level Cost: \" + json.nextLevelCost}<br/>{\"Next Level Effect: +\" + json.nextLevelEffect}</b></p>\r\n                        this.setState({informationMessage: \"\"})\r\n                    }\r\n                }\r\n                //Simple error message to show if something is wrong like the this.props.itemName\r\n                else {\r\n                    requirments = \"Check ShopItemListComponent. You made a goof\"\r\n                }\r\n\r\n                //Set state of the item name, the items requirments and then a cost button to actually purchase the item. This state is in HTML so it can be displayed in the render function \r\n                this.setState({\r\n                    itemsComponents: \r\n                        <tr>\r\n                            <td>{this.props.itemName}</td>\r\n                            <td>{requirments}</td>\r\n                            <td><Button variant=\"success\" onClick={this.purchaseItem}>${cost}</Button></td>\r\n                        </tr>\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {   \r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <AccordionToggle as={Button} onClick={this.renderItem} variant=\"link\" eventKey={this.props.itemName}>\r\n                            {this.props.itemName}\r\n                        </AccordionToggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={this.props.itemName}>\r\n                        <Card.Body>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Item Name</th>\r\n                                        <th>Description</th>\r\n                                        <th>Cost</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.itemsComponents}\r\n                                </tbody>\r\n                            </Table>\r\n                            {this.state.informationMessage}\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}