{"ast":null,"code":"import _classCallCheck from\"D:\\\\Users\\\\swizzle1999\\\\Documents\\\\Programming\\\\MERN\\\\cm4025\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Users\\\\swizzle1999\\\\Documents\\\\Programming\\\\MERN\\\\cm4025\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\Users\\\\swizzle1999\\\\Documents\\\\Programming\\\\MERN\\\\cm4025\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\Users\\\\swizzle1999\\\\Documents\\\\Programming\\\\MERN\\\\cm4025\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"D:\\\\Users\\\\swizzle1999\\\\Documents\\\\Programming\\\\MERN\\\\cm4025\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import Button from\"react-bootstrap/Button\";import Form from\"react-bootstrap/Form\";var fetch=require(\"node-fetch\");var checkForLocalToken=require(\"../utils/checkForLocalToken\");//function that deals with adding a pack.\n//This is an admin only accessible component that is protected by requiring an admin token when it is processed on the server end\nvar AddPackComponent=/*#__PURE__*/function(_React$Component){_inherits(AddPackComponent,_React$Component);function AddPackComponent(props){var _this;_classCallCheck(this,AddPackComponent);_this=_possibleConstructorReturn(this,_getPrototypeOf(AddPackComponent).call(this,props));_this.handlePackIDInputChange=function(event){_this.setState({packCode:event.target.value});};_this.handlePackIDSubmit=function(event){_this.setState({informationMessage:\"Processing...\"});//Quick authentication check to ensure the user is authenticated\n//There is actually no need to check if the user is an admin here since the fetch request farther down the the API will check that for us\ncheckForLocalToken.checkForLocalTokenNoUserObject().then(function(returnObject){if(returnObject!=null){_this.setState({token:returnObject.token});}}).then(function(){//API call to add the pack, sends the users token along to verify it is an admin\nfetch(\"/api/packs/addpack/\"+_this.state.packCode,{method:\"GET\",headers:{\"accepts\":\"application/json\",\"x-auth-token\":_this.state.token}}).then(function(res){return res.json();}).then(function(json){_this.setState({informationMessage:json.msg});//Old legacy code from when this was a non admin function\n//Kept it around as i felt it would be usefull for reference elsewhere\n// if (json.rarities){\n//     let rarities = []\n//     //it should be noted that \n//     rarities.push(\n//         <Form.Group controlId=\"cost\">\n//             <div className=\"d-flex align-items-center\"> \n//                 <p style={{color: \"white\"}}>Cost: </p> <Form.Control onChange={(e) => this.handleRarityInputChange(e, \"cost\")} style={{marginRight: \"0.5rem\"}} type=\"number\" placeholder=\"\"/>\n//             </div>\n//         </Form.Group>\n//     )\n//     json.rarities.forEach(rarity => {\n//         rarities.push(\n//             <Form.Group controlId={rarity}>\n//                 <div className=\"d-flex align-items-center\"> \n//                     <p style={{color: \"white\"}}>{rarity} Rarity: </p> <Form.Control onChange={(e) => this.handleRarityInputChange(e, rarity)} style={{marginRight: \"0.5rem\"}} type=\"number\" placeholder=\"\"/>\n//                 </div>\n//             </Form.Group>\n//         )\n//     })\n//     rarities.push(<Button onClick={this.handleRaritySubmit}>Submit</Button>)\n//     this.setState({\n//         rarityForms: rarities\n//     })\n// }\n});});};_this.state={packCode:\"\",informationMessage:\"\",rarityForms:null,allRarities:{}};return _this;}//Just handles chanegs to the input box and sets the state to the new text in the input box\n_createClass(AddPackComponent,[{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(Form,{className:\"custom-form\"},React.createElement(Form.Group,{controlId:\"packId\"},React.createElement(Form.Label,{style:{color:\"white\",width:\"100%\"}},\"Pack ID\"),React.createElement(\"div\",{className:\"d-flex align-items-center\"},React.createElement(Form.Control,{style:{marginRight:\"0.5rem\"},type:\"string\",placeholder:\"\",onChange:this.handlePackIDInputChange}),React.createElement(Button,{variant:\"primary\",onClick:this.handlePackIDSubmit},\"Add\")),React.createElement(\"h2\",{style:{color:\"white\"}},this.state.informationMessage))));}}]);return AddPackComponent;}(React.Component);export{AddPackComponent as default};","map":{"version":3,"sources":["D:/Users/swizzle1999/Documents/Programming/MERN/cm4025/client/src/components/AddPackComponent.js"],"names":["React","Button","Form","fetch","require","checkForLocalToken","AddPackComponent","props","handlePackIDInputChange","event","setState","packCode","target","value","handlePackIDSubmit","informationMessage","checkForLocalTokenNoUserObject","then","returnObject","token","state","method","headers","res","json","msg","rarityForms","allRarities","color","width","marginRight","Component"],"mappings":"gxBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CAEA,GAAMC,CAAAA,KAAK,CAAGC,OAAO,CAAC,YAAD,CAArB,CACA,GAAMC,CAAAA,kBAAkB,CAAGD,OAAO,CAAC,6BAAD,CAAlC,CAEA;AACA;GACqBE,CAAAA,gB,sFACjB,0BAAYC,KAAZ,CAAkB,kDACd,kFAAMA,KAAN,GADc,MAYlBC,uBAZkB,CAYQ,SAACC,KAAD,CAAU,CAChC,MAAKC,QAAL,CAAc,CACVC,QAAQ,CAAEF,KAAK,CAACG,MAAN,CAAaC,KADb,CAAd,EAGH,CAhBiB,OAmBlBC,kBAnBkB,CAmBG,SAACL,KAAD,CAAW,CAC5B,MAAKC,QAAL,CAAc,CACVK,kBAAkB,CAAE,eADV,CAAd,EAIA;AACA;AACAV,kBAAkB,CAACW,8BAAnB,GACCC,IADD,CACM,SAAAC,YAAY,CAAI,CACpB,GAAIA,YAAY,EAAI,IAApB,CAAyB,CACvB,MAAKR,QAAL,CAAc,CACZS,KAAK,CAAED,YAAY,CAACC,KADR,CAAd,EAGD,CACF,CAPD,EAQCF,IARD,CAQM,UAAM,CACR;AACAd,KAAK,CAAC,sBAAwB,MAAKiB,KAAL,CAAWT,QAApC,CAA8C,CAACU,MAAM,CAAE,KAAT,CAAgBC,OAAO,CAAC,CAAC,UAAW,kBAAZ,CAAgC,eAAgB,MAAKF,KAAL,CAAWD,KAA3D,CAAxB,CAA9C,CAAL,CACCF,IADD,CACM,SAAAM,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADT,EAECP,IAFD,CAEM,SAAAO,IAAI,CAAI,CACV,MAAKd,QAAL,CAAc,CACVK,kBAAkB,CAAES,IAAI,CAACC,GADf,CAAd,EAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAnCD,EAoCH,CA9CD,EA+CH,CAzEiB,CAGd,MAAKL,KAAL,CAAa,CACTT,QAAQ,CAAE,EADD,CAETI,kBAAkB,CAAE,EAFX,CAGTW,WAAW,CAAE,IAHJ,CAITC,WAAW,CAAE,EAJJ,CAAb,CAHc,aASjB,CAED;oEAgES,CACL,MACI,gCACI,oBAAC,IAAD,EAAM,SAAS,CAAC,aAAhB,EACI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,QAAtB,EACA,oBAAC,IAAD,CAAM,KAAN,EAAY,KAAK,CAAE,CAACC,KAAK,CAAE,OAAR,CAAiBC,KAAK,CAAE,MAAxB,CAAnB,YADA,CAEI,2BAAK,SAAS,CAAC,2BAAf,EACI,oBAAC,IAAD,CAAM,OAAN,EAAc,KAAK,CAAE,CAACC,WAAW,CAAE,QAAd,CAArB,CAA8C,IAAI,CAAC,QAAnD,CAA4D,WAAW,CAAC,EAAxE,CAA2E,QAAQ,CAAE,KAAKtB,uBAA1F,EADJ,CAEI,oBAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,CAAE,KAAKM,kBAAxC,QAFJ,CAFJ,CAQI,0BAAI,KAAK,CAAE,CAACc,KAAK,CAAE,OAAR,CAAX,EAA8B,KAAKR,KAAL,CAAWL,kBAAzC,CARJ,CADJ,CADJ,CADJ,CAgBH,C,8BA7FyCf,KAAK,CAAC+B,S,SAA/BzB,gB","sourcesContent":["import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst fetch = require(\"node-fetch\");\r\nconst checkForLocalToken = require(\"../utils/checkForLocalToken\");\r\n\r\n//function that deals with adding a pack.\r\n//This is an admin only accessible component that is protected by requiring an admin token when it is processed on the server end\r\nexport default class AddPackComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            packCode: \"\",\r\n            informationMessage: \"\",\r\n            rarityForms: null,\r\n            allRarities: {},\r\n          }\r\n    }\r\n\r\n    //Just handles chanegs to the input box and sets the state to the new text in the input box\r\n    handlePackIDInputChange = (event) =>{\r\n        this.setState({\r\n            packCode: event.target.value\r\n        })\r\n    }\r\n\r\n    //The function that handles a submit when a user wants to add a new pack\r\n    handlePackIDSubmit = (event) => {\r\n        this.setState({\r\n            informationMessage: \"Processing...\",\r\n        })\r\n\r\n        //Quick authentication check to ensure the user is authenticated\r\n        //There is actually no need to check if the user is an admin here since the fetch request farther down the the API will check that for us\r\n        checkForLocalToken.checkForLocalTokenNoUserObject()\r\n        .then(returnObject => {\r\n          if (returnObject != null){\r\n            this.setState({\r\n              token: returnObject.token,\r\n          })\r\n          }\r\n        })\r\n        .then(() => {\r\n            //API call to add the pack, sends the users token along to verify it is an admin\r\n            fetch(\"/api/packs/addpack/\" + this.state.packCode, {method: \"GET\", headers:{\"accepts\": \"application/json\", \"x-auth-token\": this.state.token}})\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    informationMessage: json.msg\r\n                })\r\n\r\n                //Old legacy code from when this was a non admin function\r\n                //Kept it around as i felt it would be usefull for reference elsewhere\r\n                \r\n                // if (json.rarities){\r\n                //     let rarities = []\r\n                //     //it should be noted that \r\n                //     rarities.push(\r\n                //         <Form.Group controlId=\"cost\">\r\n                //             <div className=\"d-flex align-items-center\"> \r\n                //                 <p style={{color: \"white\"}}>Cost: </p> <Form.Control onChange={(e) => this.handleRarityInputChange(e, \"cost\")} style={{marginRight: \"0.5rem\"}} type=\"number\" placeholder=\"\"/>\r\n                //             </div>\r\n                //         </Form.Group>\r\n                //     )\r\n\r\n                //     json.rarities.forEach(rarity => {\r\n                //         rarities.push(\r\n                //             <Form.Group controlId={rarity}>\r\n                //                 <div className=\"d-flex align-items-center\"> \r\n                //                     <p style={{color: \"white\"}}>{rarity} Rarity: </p> <Form.Control onChange={(e) => this.handleRarityInputChange(e, rarity)} style={{marginRight: \"0.5rem\"}} type=\"number\" placeholder=\"\"/>\r\n                //                 </div>\r\n                //             </Form.Group>\r\n                //         )\r\n                //     })\r\n                //     rarities.push(<Button onClick={this.handleRaritySubmit}>Submit</Button>)\r\n                //     this.setState({\r\n                //         rarityForms: rarities\r\n                //     })\r\n                // }\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form className=\"custom-form\">\r\n                    <Form.Group controlId=\"packId\">\r\n                    <Form.Label style={{color: \"white\" ,width: \"100%\"}}>Pack ID</Form.Label>\r\n                        <div className=\"d-flex align-items-center\"> \r\n                            <Form.Control style={{marginRight: \"0.5rem\"}} type=\"string\" placeholder=\"\" onChange={this.handlePackIDInputChange}/>\r\n                            <Button variant=\"primary\" onClick={this.handlePackIDSubmit}>\r\n                                Add\r\n                            </Button>\r\n                        </div>\r\n                        <h2 style={{color :\"white\"}}>{this.state.informationMessage}</h2>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}