{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\swizzle1999\\\\Documents\\\\Programming\\\\MERN\\\\cm4025\\\\client\\\\src\\\\components\\\\AdminComponent.js\";\nimport React from 'react';\nimport AddPackComponent from \"./AddPackComponent\";\nimport AdminPackListComponent from \"./AdminPackListComponent\";\n\nconst fetch = require(\"node-fetch\");\n\nconst checkForLocalToken = require(\"../utils/checkForLocalToken\");\n\nconst sortPacksByLevel = require(\"../utils/sortPacksByLevel\");\n\nexport default class AdminComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      this.setState({\n        packCode: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      this.setState({\n        informationMessage: \"Processing...\"\n      });\n      checkForLocalToken.checkForLocalTokenNoUserObject().then(returnObject => {\n        if (returnObject != null) {\n          this.setState({\n            token: returnObject.token\n          });\n        }\n      }).then(() => {\n        fetch(\"/api/packs/addpack/\" + this.state.packCode, {\n          method: \"GET\",\n          headers: {\n            \"accepts\": \"application/json\",\n            \"x-auth-token\": this.state.token\n          }\n        }).then(res => res.json()).then(json => {\n          this.setState({\n            informationMessage: json.msg\n          });\n        });\n      });\n    };\n\n    this.state = {\n      packs: []\n    };\n  }\n\n  componentDidMount() {\n    //Fetch all packs from database to display to admin if they are authenticated\n    checkForLocalToken.checkForLocalTokenNoUserObject().then(returnObject => {\n      if (returnObject != null) {\n        fetch(\"/api/packs/?allPacks=true\", {\n          method: \"GET\",\n          headers: {\n            \"accepts\": \"application/json\",\n            \"x-auth-token\": returnObject.token\n          }\n        }).then(res => res.json()).then(async json => {\n          if (json.packs) {\n            let packArray = this.state.packs;\n\n            for (let i = 0; i < json.packs.length; i++) {\n              packArray.push(json.packs[i]);\n            }\n\n            packArray.sort(sortPacksByLevel.compare);\n            this.setState({\n              packs: packArray\n            });\n          }\n        });\n      }\n    });\n  } //Function to map all packs to an AdminPackListComponent\n\n\n  renderPacks(packs) {\n    return packs.map(pack => React.createElement(AdminPackListComponent, {\n      key: pack.code,\n      code: pack.code,\n      name: pack.name,\n      rarities: pack.rarityOdds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n  componentDidUpdate() {} //Update state on input change\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(AddPackComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), this.renderPacks(this.state.packs));\n  }\n\n}","map":{"version":3,"sources":["D:/Users/swizzle1999/Documents/Programming/MERN/cm4025/client/src/components/AdminComponent.js"],"names":["React","AddPackComponent","AdminPackListComponent","fetch","require","checkForLocalToken","sortPacksByLevel","AdminComponent","Component","constructor","props","handleInputChange","event","setState","packCode","target","value","handleSubmit","informationMessage","checkForLocalTokenNoUserObject","then","returnObject","token","state","method","headers","res","json","msg","packs","componentDidMount","packArray","i","length","push","sort","compare","renderPacks","map","pack","code","name","rarityOdds","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AddPackComponent from \"./AddPackComponent\";\r\nimport AdminPackListComponent from \"./AdminPackListComponent\";\r\n\r\nconst fetch = require(\"node-fetch\");\r\nconst checkForLocalToken = require(\"../utils/checkForLocalToken\");\r\nconst sortPacksByLevel = require(\"../utils/sortPacksByLevel\");\r\n\r\n\r\nexport default class AdminComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            packs: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        //Fetch all packs from database to display to admin if they are authenticated\r\n        checkForLocalToken.checkForLocalTokenNoUserObject()\r\n        .then(returnObject => {\r\n            if (returnObject != null){\r\n                fetch(\"/api/packs/?allPacks=true\", {method: \"GET\", headers:{\"accepts\": \"application/json\", \"x-auth-token\": returnObject.token}})\r\n                .then(res => res.json())\r\n                .then(async json => {\r\n                    if (json.packs){\r\n                        let packArray = this.state.packs\r\n                        for (let i = 0; i < json.packs.length; i++){\r\n                            packArray.push(json.packs[i]);\r\n                        }\r\n                        packArray.sort(sortPacksByLevel.compare)\r\n                        this.setState({packs: packArray});\r\n                    }\r\n                    \r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    //Function to map all packs to an AdminPackListComponent\r\n    renderPacks(packs) {\r\n        return packs.map(pack => <AdminPackListComponent key={pack.code} code={pack.code} name={pack.name} rarities={pack.rarityOdds}/>)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        \r\n    }\r\n\r\n    //Update state on input change\r\n    handleInputChange = (event) =>{\r\n        this.setState({\r\n            packCode: event.target.value\r\n        })\r\n    }\r\n\r\n    //Old legacy function, not currently used. Actually replaced by AddPackComponent\r\n    handleSubmit = (event) => {\r\n        this.setState({\r\n            informationMessage: \"Processing...\",\r\n        })\r\n        checkForLocalToken.checkForLocalTokenNoUserObject()\r\n        .then(returnObject => {\r\n          if (returnObject != null){\r\n            this.setState({\r\n              token: returnObject.token,\r\n          })\r\n          }\r\n        })\r\n        .then(() => {\r\n            fetch(\"/api/packs/addpack/\" + this.state.packCode, {method: \"GET\", headers:{\"accepts\": \"application/json\", \"x-auth-token\": this.state.token}})\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    informationMessage: json.msg\r\n                })\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AddPackComponent />\r\n                {this.renderPacks(this.state.packs)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}