{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\swizzle1999\\\\Documents\\\\Programming\\\\MERN\\\\cm4025\\\\client\\\\src\\\\components\\\\PackListComponent.js\";\nimport React from 'react';\nimport Accordion from \"react-bootstrap/Accordion\";\nimport AccordionToggle from 'react-bootstrap/AccordionToggle';\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Table from 'react-bootstrap/Table';\nimport styled from \"styled-components\";\nimport PackListCardComponent from \"./PackListCardComponent\";\n\nconst fetch = require(\"node-fetch\");\n\nconst checkForLocalToken = require(\"../utils/checkForLocalToken\");\n\nconst Logo = styled.img`\nheight: auto;\nwidth: 15%;\n`;\nconst Img = styled.img`\n    height: auto;\n    width: 30%;\n`; //This component is similar to the IventoryListComponent in that it displays one specific pack to the user and then individual cards are displayed via the PackListCardComponent\n\nexport default class PackListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCards = () => {\n      fetch(\"/api/packs/\" + this.props.code, {\n        method: \"GET\",\n        headers: {\n          \"accepts\": \"application/json\"\n        }\n      }).then(res => res.json()).then(async json => {\n        //Loop through all the cards and remove that ones that do not include the search filter\n        for (let i = 0; i < json.cards.length; i++) {\n          if (!JSON.stringify(json.cards[i].name).includes(this.props.filter)) {\n            json.cards.splice(i, 1);\n            i--;\n          }\n        }\n\n        this.setState({\n          cardsComponent: json.cards.map(card => React.createElement(PackListCardComponent, {\n            key: card.id,\n            code: card.id,\n            name: card.name,\n            rarity: card.rarity,\n            filter: this.props.filter,\n            packCode: this.props.code,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          })),\n          informationMessage: \"\"\n        });\n      });\n    };\n\n    this.fetchHowManyCardsUserOwns = () => {\n      let inventory = null; //Check the user is valid and grab token\n\n      checkForLocalToken.checkForLocalTokenNoUserObject().then(returnObject => {\n        if (returnObject != null) {\n          this.setState({\n            token: returnObject.token\n          });\n        }\n      }) //Send token along to verify the user is who they say they are and in order to grab their inventory\n      .then(async () => {\n        await fetch(\"/api/auth/user/inventory\", {\n          method: \"GET\",\n          headers: {\n            \"accepts\": \"application/json\",\n            \"x-auth-token\": this.state.token\n          }\n        }).then(res => res.json()).then(async json => {\n          if (json.inventory) {\n            //Go over the users inventory and find the correct pack\n            for (let i = 0; i < json.inventory.length; i++) {\n              if (json.inventory[i].code == this.props.code) {\n                //Set the correct pack to the current inventory\n                inventory = json.inventory[i].cards;\n              }\n            }\n\n            if (inventory) {\n              this.setState({\n                ownedCardCount: inventory.length\n              });\n            } else {\n              this.setState({\n                ownedCardCount: 0\n              });\n            }\n          }\n        });\n      });\n    };\n\n    this.openPack = event => {\n      this.setState({\n        buttonText: \"Opening Pack...\"\n      });\n      event.preventDefault();\n      checkForLocalToken.checkForLocalTokenNoUserObject().then(returnObject => {\n        if (returnObject != null) {\n          fetch(\"/api/packs/open/\" + this.props.code, {\n            method: \"GET\",\n            headers: {\n              \"accepts\": \"application/json\",\n              \"x-auth-token\": returnObject.token\n            }\n          }).then(res => res.json()).then(json => {\n            this.setState({\n              pulledCards: json\n            });\n            this.showPulledCards();\n          }).then(() => {\n            this.setState({\n              buttonText: \"Open Pack $\" + this.state.cost\n            });\n            this.fetchHowManyCardsUserOwns();\n            let dataToParent = {\n              openedPack: true\n            };\n            {\n              this.props.callbackToParent(dataToParent);\n            }\n          });\n        }\n      });\n    };\n\n    this.hidePulledCards = () => {\n      this.setState({\n        displayPulledCards: false\n      });\n    };\n\n    this.showPulledCards = () => {\n      this.setState({\n        displayPulledCards: true\n      });\n    };\n\n    this.processPulledCards = () => {\n      if (this.state.pulledCards.error) {\n        return React.createElement(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, this.state.pulledCards.error));\n      } else {\n        if (this.state.pulledCards[0] && this.state.pulledCards[1] && this.state.pulledCards[2]) {\n          return React.createElement(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }, React.createElement(Img, {\n            src: \"https://cm4025.s3.eu-west-2.amazonaws.com/packs/\" + this.state.pulledCards[0].setCode + \"/\" + this.state.pulledCards[0].id + \".jpg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          }), React.createElement(Img, {\n            src: \"https://cm4025.s3.eu-west-2.amazonaws.com/packs/\" + this.state.pulledCards[1].setCode + \"/\" + this.state.pulledCards[1].id + \".jpg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }), React.createElement(Img, {\n            src: \"https://cm4025.s3.eu-west-2.amazonaws.com/packs/\" + this.state.pulledCards[2].setCode + \"/\" + this.state.pulledCards[2].id + \".jpg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }));\n        } else {\n          return;\n        }\n      }\n    };\n\n    this.state = {\n      cost: 0,\n      displayPulledCards: false,\n      pulledCards: {},\n      cardsComponent: null,\n      informationMessage: \"Loading...\",\n      filter: \"\",\n      buttonText: \"\",\n      ownedCardCount: 0,\n      totalCardCount: 0,\n      token: null,\n      forceUpdate: 0\n    };\n  } //Set pack cost if the cost props is null for any reason\n\n\n  componentDidMount() {\n    if (this.props.cost == null) {\n      this.setState({\n        cost: 10\n      });\n      this.setState({\n        buttonText: \"Open Pack $\" + \"10\"\n      });\n    } else {\n      this.setState({\n        cost: this.props.cost\n      });\n      this.setState({\n        buttonText: \"Open Pack $\" + this.props.cost\n      });\n    }\n\n    this.fetchHowManyCardsUserOwns();\n  } // componentDidUpdate(prevProps){\n  //     console.log(\"shabba\")\n  //     if (this.props.packListForceUpdate != prevProps.packListForceUpdate){\n  //         console.log(\"SHIT\")\n  //         this.fetchHowManyCardsUserOwns();\n  //     }\n  // }\n  //When component updates it checks to see if the search filter has changed\n  //If it has it knows it must re render the cards\n  //\"prevState.cardsComponent != null\" works because even though if we type something in that gets no result. its not null, its an empty array\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.filter != this.props.filter && prevState.cardsComponent != null) {\n      this.setState({\n        informationMessage: \"Loading...\"\n      });\n      this.renderCards();\n    }\n  } //Function that is called when the props of this component change, performs a state change to update the filter\n  //Cards component is set to null to get rid of all existing cards from the list\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.filter != prevState.filter) {\n      return {\n        filter: nextProps.filter,\n        cardsComponent: null\n      };\n    }\n  } //Performs a fetch request to the API in order to get data about a specific pack and then filters all of the cards in that pack against the filter the user specified at the top of the screen\n  //The cards are then mapped to the PackListCardComponent and stored in the cardsComponent state in order to be displayed\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.displayPulledCards,\n      onHide: this.hidePulledCards,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Cards\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, this.processPulledCards()), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.hidePulledCards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(AccordionToggle, {\n      as: Button,\n      onClick: this.renderCards,\n      variant: \"link\",\n      eventKey: this.props.code + \"Server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, this.props.name, React.createElement(Logo, {\n      style: {\n        marginLeft: \"0.5rem\",\n        marginRight: \"0.5rem\"\n      },\n      src: \"https://cm4025.s3.amazonaws.com/packs/\" + this.props.code + \"/\" + this.props.code + \"Logo.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), \"Level Requirment: \", this.props.level), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.openPack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, this.state.buttonText), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"You Own: \", this.state.ownedCardCount, \"/\", this.props.totalCards, \" Cards In This Set\")), React.createElement(Accordion.Collapse, {\n      eventKey: this.props.code + \"Server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Card Code\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Rarity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Image\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, this.state.cardsComponent)), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, this.state.informationMessage)))));\n  }\n\n}","map":{"version":3,"sources":["D:/Users/swizzle1999/Documents/Programming/MERN/cm4025/client/src/components/PackListComponent.js"],"names":["React","Accordion","AccordionToggle","Button","Card","Modal","Table","styled","PackListCardComponent","fetch","require","checkForLocalToken","Logo","img","Img","PackListComponent","Component","constructor","props","renderCards","code","method","headers","then","res","json","i","cards","length","JSON","stringify","name","includes","filter","splice","setState","cardsComponent","map","card","id","rarity","informationMessage","fetchHowManyCardsUserOwns","inventory","checkForLocalTokenNoUserObject","returnObject","token","state","ownedCardCount","openPack","event","buttonText","preventDefault","pulledCards","showPulledCards","cost","dataToParent","openedPack","callbackToParent","hidePulledCards","displayPulledCards","processPulledCards","error","textAlign","setCode","totalCardCount","forceUpdate","componentDidMount","componentDidUpdate","prevProps","prevState","getDerivedStateFromProps","nextProps","render","marginLeft","marginRight","level","totalCards"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport AccordionToggle from 'react-bootstrap/AccordionToggle';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport styled from \"styled-components\";\r\nimport PackListCardComponent from \"./PackListCardComponent\";\r\n\r\nconst fetch = require(\"node-fetch\");\r\nconst checkForLocalToken = require(\"../utils/checkForLocalToken\");\r\n\r\nconst Logo = styled.img`\r\nheight: auto;\r\nwidth: 15%;\r\n`\r\n\r\nconst Img = styled.img`\r\n    height: auto;\r\n    width: 30%;\r\n`\r\n\r\n//This component is similar to the IventoryListComponent in that it displays one specific pack to the user and then individual cards are displayed via the PackListCardComponent\r\nexport default class PackListComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            cost: 0,\r\n            displayPulledCards: false,\r\n            pulledCards: {},\r\n            cardsComponent: null,\r\n            informationMessage: \"Loading...\",\r\n            filter: \"\",\r\n            buttonText: \"\",\r\n            ownedCardCount: 0,\r\n            totalCardCount: 0,\r\n            token: null,\r\n            forceUpdate: 0\r\n          }\r\n    }\r\n\r\n    //Set pack cost if the cost props is null for any reason\r\n    componentDidMount(){\r\n        if (this.props.cost == null){\r\n            this.setState({cost: 10});   \r\n            \r\n            this.setState({\r\n                buttonText: \"Open Pack $\" + \"10\"\r\n            })\r\n        } else {\r\n            this.setState({cost: this.props.cost})\r\n\r\n            this.setState({\r\n                buttonText: \"Open Pack $\" + this.props.cost\r\n            })\r\n        }\r\n\r\n        this.fetchHowManyCardsUserOwns();\r\n    }\r\n\r\n    // componentDidUpdate(prevProps){\r\n    //     console.log(\"shabba\")\r\n    //     if (this.props.packListForceUpdate != prevProps.packListForceUpdate){\r\n    //         console.log(\"SHIT\")\r\n    //         this.fetchHowManyCardsUserOwns();\r\n    //     }\r\n    // }\r\n\r\n    //When component updates it checks to see if the search filter has changed\r\n    //If it has it knows it must re render the cards\r\n    //\"prevState.cardsComponent != null\" works because even though if we type something in that gets no result. its not null, its an empty array\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.filter != this.props.filter && prevState.cardsComponent != null){\r\n            this.setState({informationMessage: \"Loading...\"})\r\n            this.renderCards()\r\n        }\r\n    }\r\n\r\n    //Function that is called when the props of this component change, performs a state change to update the filter\r\n    //Cards component is set to null to get rid of all existing cards from the list\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if (nextProps.filter != prevState.filter){\r\n            return ({filter: nextProps.filter, cardsComponent: null})\r\n        }\r\n    }\r\n\r\n    //Performs a fetch request to the API in order to get data about a specific pack and then filters all of the cards in that pack against the filter the user specified at the top of the screen\r\n    //The cards are then mapped to the PackListCardComponent and stored in the cardsComponent state in order to be displayed\r\n    renderCards = () => {\r\n        fetch(\"/api/packs/\" + this.props.code, {method: \"GET\", headers:{\"accepts\": \"application/json\"}})\r\n        .then(res => res.json())\r\n        .then(async json => {\r\n            //Loop through all the cards and remove that ones that do not include the search filter\r\n            for (let i = 0; i < json.cards.length; i++){\r\n                if (!JSON.stringify(json.cards[i].name).includes(this.props.filter)){\r\n                    json.cards.splice(i, 1)\r\n                    i--\r\n                }\r\n            }\r\n            this.setState({\r\n                cardsComponent: json.cards.map(card => <PackListCardComponent key={card.id} code={card.id} name={card.name} rarity={card.rarity} filter={this.props.filter} packCode={this.props.code}/>),\r\n                informationMessage: \"\",\r\n            })\r\n        })\r\n    }\r\n\r\n    //Simple function that calls to the API in order to determine how many cards the user owns out of a specific pack\r\n    fetchHowManyCardsUserOwns = () => {\r\n        let inventory = null\r\n        //Check the user is valid and grab token\r\n        checkForLocalToken.checkForLocalTokenNoUserObject()\r\n        .then(returnObject => {\r\n          if (returnObject != null){\r\n            this.setState({\r\n              token: returnObject.token,\r\n          })\r\n          }\r\n        })\r\n        //Send token along to verify the user is who they say they are and in order to grab their inventory\r\n        .then(async () => {\r\n            await fetch(\"/api/auth/user/inventory\", {method: \"GET\", headers:{\"accepts\": \"application/json\", \"x-auth-token\": this.state.token}})\r\n            .then(res => res.json())\r\n            .then(async json => {\r\n                if (json.inventory){\r\n                    //Go over the users inventory and find the correct pack\r\n                    for (let i = 0; i < json.inventory.length; i++){\r\n                        if (json.inventory[i].code == this.props.code){\r\n                            //Set the correct pack to the current inventory\r\n                            inventory = json.inventory[i].cards;\r\n                        }\r\n                    }\r\n\r\n                    if (inventory){\r\n                        this.setState({ownedCardCount: inventory.length})\r\n                    } else {\r\n                        this.setState({ownedCardCount: 0})\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    //Function deals with actually opening this specific pack.\r\n    //API call is sent the users token and then returns the 3 cards the user recieved if they met the requirments to open the pack \r\n    openPack = (event) => {\r\n        this.setState({\r\n            buttonText: \"Opening Pack...\",\r\n        })\r\n\r\n        event.preventDefault();\r\n        checkForLocalToken.checkForLocalTokenNoUserObject()\r\n        .then(returnObject => {\r\n            if (returnObject != null){\r\n                fetch(\"/api/packs/open/\"+this.props.code, {method: \"GET\", headers:{\"accepts\": \"application/json\", \"x-auth-token\": returnObject.token}})\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    this.setState({\r\n                        pulledCards: json,\r\n                    })\r\n                    this.showPulledCards();\r\n                })\r\n                .then(() => {\r\n                    this.setState({\r\n                        buttonText: \"Open Pack $\" + this.state.cost,\r\n                    })\r\n\r\n                    this.fetchHowManyCardsUserOwns();\r\n                    let dataToParent ={\r\n                        openedPack: true,\r\n                    }\r\n                    {this.props.callbackToParent(dataToParent)}\r\n                })\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    //Simple hide and show functions to hide and show the opened cards from this pack\r\n    hidePulledCards = () =>{\r\n        this.setState({displayPulledCards: false});\r\n    }\r\n\r\n    showPulledCards = () =>{\r\n        this.setState({displayPulledCards: true});\r\n    }\r\n\r\n    //Itterates over the cards the user just recieved and displays the cards image\r\n    processPulledCards = () => {\r\n        if (this.state.pulledCards.error){\r\n            return (\r\n                <div style={{textAlign: \"center\"}}>\r\n                    <h1>{this.state.pulledCards.error}</h1>\r\n                </div>\r\n            );\r\n        } else {\r\n            if (this.state.pulledCards[0] && this.state.pulledCards[1] && this.state.pulledCards[2]){\r\n                return (\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <Img src={\"https://cm4025.s3.eu-west-2.amazonaws.com/packs/\" + this.state.pulledCards[0].setCode + \"/\" + this.state.pulledCards[0].id + \".jpg\"}></Img>\r\n                        <Img src={\"https://cm4025.s3.eu-west-2.amazonaws.com/packs/\" + this.state.pulledCards[1].setCode + \"/\" + this.state.pulledCards[1].id + \".jpg\"}></Img>\r\n                        <Img src={\"https://cm4025.s3.eu-west-2.amazonaws.com/packs/\" + this.state.pulledCards[2].setCode + \"/\" + this.state.pulledCards[2].id + \".jpg\"}></Img>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal show={this.state.displayPulledCards} onHide={this.hidePulledCards} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                    <Modal.Header>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Cards\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {this.processPulledCards()}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.hidePulledCards}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <AccordionToggle as={Button} onClick={this.renderCards} variant=\"link\" eventKey={this.props.code+\"Server\"}>\r\n                            {this.props.name}  \r\n                            <Logo style={{marginLeft: \"0.5rem\", marginRight: \"0.5rem\"}}src={\"https://cm4025.s3.amazonaws.com/packs/\" + this.props.code + \"/\" + this.props.code + \"Logo.jpg\"}/>\r\n                            <br></br>\r\n                            Level Requirment: {this.props.level}\r\n                        </AccordionToggle>\r\n                        <br></br>\r\n                        <Button variant=\"success\" onClick={this.openPack}>{this.state.buttonText}</Button>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <p>You Own: {this.state.ownedCardCount}/{this.props.totalCards} Cards In This Set</p>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={this.props.code+\"Server\"}>\r\n                        <Card.Body>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Card Code</th>\r\n                                        <th>Name</th>\r\n                                        <th>Rarity</th>\r\n                                        <th>Image</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.cardsComponent} \r\n                                </tbody>\r\n                            </Table>\r\n                            <h1>{this.state.informationMessage}</h1>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}