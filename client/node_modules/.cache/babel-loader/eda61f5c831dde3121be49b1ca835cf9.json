{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\swizzle1999\\\\Documents\\\\Programming\\\\MERN\\\\cm4025\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport AccordionToggle from 'react-bootstrap/AccordionToggle';\nimport Button from 'react-bootstrap/Button';\nimport styled from \"styled-components\";\nimport { getFromStorage, setInStorage } from \"./utils/storage\"; //Component Imports\n\nimport NavbarComponent from './components/NavbarComponent';\nimport PlayerStatsComponent from './components/PlayerStatsComponent';\nimport LoginComponent from './components/LoginComponent';\nimport RegisterComponent from './components/RegisterComponent';\nimport PackListComponent from \"./components/PackListComponent\";\nimport InventoryListComponent from \"./components/InventoryListComponent\";\n\nconst checkForLocalToken = require(\"./utils/checkForLocalToken\");\n\nconst fetch = require(\"node-fetch\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.navbarComponentChildCallback = dataFromChild => {\n      if (dataFromChild.logOut) {\n        setInStorage(\"PokePacksOnline\", \"\");\n        this.setState({\n          token: \"\",\n          userObject: {}\n        });\n      } else if (dataFromChild.inventory) {\n        this.setState({\n          rightPanelComponent: \"InventoryListComponent\"\n        });\n      }\n    };\n\n    this.leftPanelComponentChildCallback = dataFromChild => {\n      //if the child is telling the parent to load a new component\n      if (dataFromChild.componentToLoad) {\n        this.setState({\n          leftPanelComponent: dataFromChild.componentToLoad\n        });\n      } //If the child wants to log a user in\n      else if (dataFromChild.login) {\n          fetch(\"/api/auth/\", {\n            method: \"POST\",\n            headers: {\n              \"accepts\": \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              \"email\": dataFromChild.email,\n              \"password\": dataFromChild.password\n            })\n          }).then(res => res.json()).then(json => {\n            if (json.token) {\n              setInStorage(\"PokePacksOnline\", json.token);\n              this.setState({\n                leftPanelComponent: \"PlayerStatsComponent\"\n              }); //Get token from local storage and then fetch the users details from the database which is then set in state\n\n              checkForLocalToken.checkForLocalToken().then(returnObject => {\n                if (returnObject != null) {\n                  this.setState({\n                    token: returnObject.token,\n                    admin: returnObject.admin,\n                    userObject: returnObject.userObject\n                  });\n                  console.log(returnObject.admin);\n                }\n              });\n            } else {\n              console.log(\"Invalid credentials\");\n            }\n          });\n        } //If the child wants to register a user\n        else if (dataFromChild.register) {\n            fetch(\"/api/users/\", {\n              method: \"POST\",\n              headers: {\n                \"accepts\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"username\": dataFromChild.username,\n                \"email\": dataFromChild.email,\n                \"password\": dataFromChild.password,\n                \"confirmPassword\": dataFromChild.confirmPassword\n              })\n            }).then(res => res.json()).then(json => {\n              if (json.token) {\n                this.setState({\n                  leftPanelComponent: \"LoginComponent\"\n                });\n              } else {\n                console.log(\"Invalid credentials\");\n              }\n            });\n          }\n    };\n\n    this.state = {\n      time: Date.now(),\n      packs: [],\n      token: \"\",\n      admin: false,\n      userObject: {},\n      leftPanelComponent: \"PlayerStatsComponent\",\n      rightPanelComponent: \"PackListComponent\"\n    };\n  }\n\n  componentDidMount() {\n    //Quick check to see if the user has an existing token\n    checkForLocalToken.checkForLocalToken().then(returnObject => {\n      if (returnObject != null) {\n        this.setState({\n          token: returnObject.token,\n          admin: returnObject.admin,\n          userObject: returnObject.userObject\n        });\n      }\n    }); //Fetch all the packs that exist in the database to be displayed\n\n    fetch(\"/api/packs\", {\n      method: \"GET\",\n      headers: {\n        \"accepts\": \"application/json\"\n      }\n    }).then(res => res.json()).then(json => {\n      for (let i = 0; i < json.packs.length; i++) {\n        let packArray = this.state.packs;\n        packArray.push(json.packs[i]);\n        this.setState({\n          packs: packArray\n        });\n      }\n    });\n  } //Function that is used to change what renders on the left panel\n\n\n  leftPanelComponentToRender() {\n    switch (this.state.leftPanelComponent) {\n      case \"LoginComponent\":\n        return React.createElement(LoginComponent, {\n          callbackToParent: this.leftPanelComponentChildCallback,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n\n      case \"RegisterComponent\":\n        return React.createElement(RegisterComponent, {\n          callbackToParent: this.leftPanelComponentChildCallback,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        });\n\n      case \"PlayerStatsComponent\":\n        if (this.state.token) {\n          return React.createElement(PlayerStatsComponent, {\n            token: this.state.token,\n            callbackToParent: this.leftPanelComponentChildCallback,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(LoginComponent, {\n            callbackToParent: this.leftPanelComponentChildCallback,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          });\n        }\n\n    }\n  }\n\n  rightPanelComponentToRender() {\n    switch (this.state.rightPanelComponent) {\n      case \"PackListComponent\":\n        return this.renderPacks(this.state.packs);\n\n      case \"InventoryListComponent\":\n        if (this.state.token) {\n          return React.createElement(InventoryListComponent, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          });\n        } else {\n          this.setState({\n            rightPanelComponent: \"PackListComponent\"\n          });\n        }\n\n      //return <RegisterComponent callbackToParent={this.leftPanelComponentChildCallback}/>\n      // case \"PlayerStatsComponent\":\n      //   if(this.state.token){\n      //     return <PlayerStatsComponent token={this.state.token} callbackToParent={this.leftPanelComponentChildCallback}/>  \n      //   } else {\n      //     return <LoginComponent callbackToParent={this.leftPanelComponentChildCallback}/>\n      //   }\n    }\n  }\n\n  //Renders all the packs to the main screen\n  renderPacks(packs) {\n    return packs.map(pack => React.createElement(PackListComponent, {\n      key: pack.code,\n      code: pack.code,\n      name: pack.name,\n      cards: pack.cards,\n      cost: pack.cost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const Styles = styled.div`\n    .col-sm-4 {\n        padding-left: 0 !important;\n    }\n    `;\n    const {\n      packs\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        backgroundColor: \"#121212\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Styles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(NavbarComponent, {\n      callbackToParent: this.navbarComponentChildCallback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        margin: \"0 auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, this.leftPanelComponentToRender()), React.createElement(Col, {\n      style: {\n        marginTop: \"0.5rem\"\n      },\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.rightPanelComponentToRender())))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Users/swizzle1999/Documents/Programming/MERN/cm4025/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","render","ReactCSSTransitionGroup","Container","Col","Row","Accordion","Card","AccordionToggle","Button","styled","getFromStorage","setInStorage","NavbarComponent","PlayerStatsComponent","LoginComponent","RegisterComponent","PackListComponent","InventoryListComponent","checkForLocalToken","require","fetch","App","Component","constructor","props","navbarComponentChildCallback","dataFromChild","logOut","setState","token","userObject","inventory","rightPanelComponent","leftPanelComponentChildCallback","componentToLoad","leftPanelComponent","login","method","headers","body","JSON","stringify","email","password","then","res","json","returnObject","admin","console","log","register","username","confirmPassword","state","time","Date","now","packs","componentDidMount","i","length","packArray","push","leftPanelComponentToRender","rightPanelComponentToRender","renderPacks","map","pack","code","name","cards","cost","Styles","div","backgroundColor","margin","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport AccordionToggle from 'react-bootstrap/AccordionToggle';\nimport Button from 'react-bootstrap/Button';\nimport styled from \"styled-components\";\n\nimport {\n  getFromStorage,\n  setInStorage\n} from \"./utils/storage\";\n\n//Component Imports\nimport NavbarComponent from './components/NavbarComponent';\nimport PlayerStatsComponent from './components/PlayerStatsComponent';\nimport LoginComponent from './components/LoginComponent';\nimport RegisterComponent from './components/RegisterComponent';\nimport PackListComponent from \"./components/PackListComponent\";\nimport InventoryListComponent from \"./components/InventoryListComponent\";\n\nconst checkForLocalToken = require(\"./utils/checkForLocalToken\");\n\nconst fetch = require(\"node-fetch\");\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      time: Date.now(),\n      packs: [],\n      token: \"\",\n      admin: false,\n      userObject: {},\n      leftPanelComponent: \"PlayerStatsComponent\",\n      rightPanelComponent: \"PackListComponent\",\n    }\n  }\n\n  componentDidMount(){\n    //Quick check to see if the user has an existing token\n    checkForLocalToken.checkForLocalToken()\n    .then(returnObject => {\n      if (returnObject != null){\n        this.setState({\n          token: returnObject.token,\n          admin: returnObject.admin,\n          userObject: returnObject.userObject,\n      })\n      }\n    })\n\n    //Fetch all the packs that exist in the database to be displayed\n    fetch(\"/api/packs\", {method: \"GET\", headers:{\"accepts\": \"application/json\"}})\n      .then(res => res.json())\n      .then(json => {\n        for (let i = 0; i < json.packs.length; i++){\n          let packArray = this.state.packs\n          packArray.push(json.packs[i]);\n          this.setState({packs: packArray});\n        }\n      })\n\n  }\n\n  //Function that is used to change what renders on the left panel\n  leftPanelComponentToRender(){\n    switch(this.state.leftPanelComponent){\n      case \"LoginComponent\":\n        return <LoginComponent callbackToParent={this.leftPanelComponentChildCallback}/>\n      case \"RegisterComponent\":\n        return <RegisterComponent callbackToParent={this.leftPanelComponentChildCallback}/>\n      case \"PlayerStatsComponent\":\n        if(this.state.token){\n          return <PlayerStatsComponent token={this.state.token} callbackToParent={this.leftPanelComponentChildCallback}/>  \n        } else {\n          return <LoginComponent callbackToParent={this.leftPanelComponentChildCallback}/>\n        }\n    }\n  }\n\n  rightPanelComponentToRender(){\n    switch(this.state.rightPanelComponent){\n      case \"PackListComponent\":\n        return this.renderPacks(this.state.packs)\n      case \"InventoryListComponent\":\n        if (this.state.token){\n          return <InventoryListComponent/>\n        } else {\n          this.setState({\n            rightPanelComponent: \"PackListComponent\",\n          })\n        }\n\n        //return <RegisterComponent callbackToParent={this.leftPanelComponentChildCallback}/>\n      // case \"PlayerStatsComponent\":\n      //   if(this.state.token){\n      //     return <PlayerStatsComponent token={this.state.token} callbackToParent={this.leftPanelComponentChildCallback}/>  \n      //   } else {\n      //     return <LoginComponent callbackToParent={this.leftPanelComponentChildCallback}/>\n      //   }\n    }\n  }\n\n  navbarComponentChildCallback = dataFromChild => {\n    if (dataFromChild.logOut){\n      setInStorage(\"PokePacksOnline\", \"\");\n      this.setState({\n        token: \"\",\n        userObject: {},\n      })\n    } else if (dataFromChild.inventory){\n      this.setState({\n        rightPanelComponent: \"InventoryListComponent\",\n      })\n    }\n  }\n\n  //The callback all components that use the left panel use to communicate with the parent (this)\n  leftPanelComponentChildCallback = dataFromChild => {\n    //if the child is telling the parent to load a new component\n    if (dataFromChild.componentToLoad){\n      this.setState({\n        leftPanelComponent: dataFromChild.componentToLoad,\n      })\n    } \n    //If the child wants to log a user in\n    else if(dataFromChild.login) {\n      fetch(\"/api/auth/\", {method: \"POST\", headers:{\"accepts\": \"application/json\", \"Content-Type\": \"application/json\"}, body: JSON.stringify({\"email\": dataFromChild.email, \"password\": dataFromChild.password})})\n      .then(res => res.json())\n      .then(json => {\n        if (json.token){\n           setInStorage(\"PokePacksOnline\", json.token);\n           this.setState({\n            leftPanelComponent: \"PlayerStatsComponent\",\n            })\n          //Get token from local storage and then fetch the users details from the database which is then set in state\n          checkForLocalToken.checkForLocalToken()\n          .then(returnObject => {\n            if (returnObject != null){\n              this.setState({\n                token: returnObject.token,\n                admin: returnObject.admin,\n                userObject: returnObject.userObject,\n            })\n            console.log(returnObject.admin);\n            }\n          })\n        } else {\n          console.log(\"Invalid credentials\");\n        }\n      })\n    } \n    //If the child wants to register a user\n    else if (dataFromChild.register){\n      fetch(\"/api/users/\", {method: \"POST\", headers:{\"accepts\": \"application/json\", \"Content-Type\": \"application/json\"}, body: JSON.stringify({\"username\": dataFromChild.username, \"email\": dataFromChild.email, \"password\": dataFromChild.password, \"confirmPassword\": dataFromChild.confirmPassword})})\n      .then(res => res.json())\n      .then(json => {\n        if (json.token){\n           this.setState({\n             leftPanelComponent: \"LoginComponent\",\n           })\n        } else {\n          console.log(\"Invalid credentials\");\n        }\n      })\n    }\n\n  }\n\n  //Renders all the packs to the main screen\n  renderPacks(packs) {\n    return packs.map(pack => <PackListComponent key={pack.code} code={pack.code} name={pack.name} cards={pack.cards} cost={pack.cost} />)\n  }\n\n  render() {\n    const Styles = styled.div`\n    .col-sm-4 {\n        padding-left: 0 !important;\n    }\n    `\n\n    const {packs} = this.state;\n    return (\n      <div className=\"App\" style={{backgroundColor: \"#121212\"}}>\n        <Styles>\n          <NavbarComponent callbackToParent={this.navbarComponentChildCallback}/>\n          <Row style={{margin: \"0 auto\"}}>\n            <Col sm={4}>\n              {this.leftPanelComponentToRender()}\n            </Col>\n            <Col style={{marginTop: \"0.5rem\"}} sm={8}>\n              <Accordion>\n                {this.rightPanelComponentToRender()}\n                {/* {this.renderPacks(this.state.packs)} */}\n              </Accordion>\n            </Col>\n          </Row>\n        </Styles>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}